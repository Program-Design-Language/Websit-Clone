<!DOCTYPE html>
<html lang="ja">
<head>
  <script data-ad-client="ca-pub-6511020045004282" async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <script>
    (adsbygoogle = window.adsbygoogle || []).push({
      google_ad_client: "ca-pub-6511020045004282",
      enable_page_level_ads: true
    });
  </script>

  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>VBAサンプル集：そのまま使える実用マクロ集｜エクセルの神髄</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="ExcelマクロVBAの実用的なサンプル集として、なるべくそのまま使えるようにVBAコードを書いています。VBAコードの細部についての技術的な解説は少なめになっています。技術的な解説は、以下をご覧ください。">
  <meta name="keywords" content="VBA,サンプル集,まま使える実用集,エクセル,Excel,マクロ">
  <link rel="icon" type="image/x-icon" href="../images/favicon_excel.png">
  <link rel="stylesheet" href="../css/style.css-20210304.css" tppabs="https://excel-ubara.com/css/style.css?20210304">
  <link rel="stylesheet" href="../css/slide.css-20210304.css" tppabs="https://excel-ubara.com/css/slide.css?20210304">
  <link rel="canonical" href="https://excel-ubara.com/excelvba5/" />
  <meta property="og:type" content="article" />
  <meta property="og:title" content="VBAサンプル集：そのまま使える実用マクロ集｜エクセルの神髄" />
  <meta property="og:description" content="ExcelマクロVBAの実用的なサンプル集として、なるべくそのまま使えるようにVBAコードを書いています。VBAコードの細部についての技術的な解説は少なめになっています。技術的な解説は、以下をご覧ください。" />
  <meta property="og:image" content="https://excel-ubara.com/ogp.jpg" />
  <meta property="og:url" content="https://excel-ubara.com/excelvba5/" />
  <meta property="og:site_name" content="エクセルの神髄" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:title" content="VBAサンプル集：そのまま使える実用マクロ集｜エクセルの神髄" />
  <meta name="twitter:description" content="ExcelマクロVBAの実用的なサンプル集として、なるべくそのまま使えるようにVBAコードを書いています。VBAコードの細部についての技術的な解説は少なめになっています。技術的な解説は、以下をご覧ください。" />
  <meta name="twitter:image" content="https://excel-ubara.com/ogp.jpg" />
  <meta name="twitter:site" content="@yamaoka_ss" />
  <script src="../../code.jquery.com/jquery-3.3.1.min.js" tppabs="https://code.jquery.com/jquery-3.3.1.min.js" async></script>
  <script type="text/javascript" src="../js/fix.js" tppabs="https://excel-ubara.com/js/fix.js" async></script>
  <script type="text/javascript" src="../js/fixmenu_pagetop.js-20210304" tppabs="https://excel-ubara.com/js/fixmenu_pagetop.js?20210304" async></script>
  <script type="text/javascript" src="../js/CopyDisp.js-20210304" tppabs="https://excel-ubara.com/js/CopyDisp.js?20210304" async></script>
</head>

<body class="c2">
  <header>
    <div class="inner">
      <p id="logo"><a href="../index.htm" tppabs="https://excel-ubara.com/"><img src="../images/logo.png" tppabs="https://excel-ubara.com/images/logo.png" alt="エクセルの神髄"></a></p>
      <div id="contact">
        <h1>エクセルの神髄<br>VBAサンプル集：そのまま使える実用マクロ集</h1>ExcelマクロVBAの実用サンプル集の記事と解説の目次です
      </div>
    </div>
  </header>

  <!--PC用（801px以上端末）メニュー-->
  <nav id="dropmenu">
    <ul class="inner">
      <li><a href="../excel_index.html" tppabs="https://excel-ubara.com/excel_index.html">Excel全般<span>Excel</span></a>
        <ul>
          <li><A href="../excel1/index.htm" tppabs="https://excel-ubara.com/excel1/">エクセル入門</A></li>
          <li><A href="../excel2/index.htm" tppabs="https://excel-ubara.com/excel2/">エクセル基本操作</A></li>
          <li><A href="../excel3/index.htm" tppabs="https://excel-ubara.com/excel3/">エクセル関数応用</A></li>
          <li><A href="../excel4/index.htm" tppabs="https://excel-ubara.com/excel4/">エクセル挑戦問題</A></li>
          <li><A href="../EXCEL/excel_reference.html" tppabs="https://excel-ubara.com/EXCEL/excel_reference.html">Excelリファレンス</A></li>
          <li><A href="../excel5/index.htm" tppabs="https://excel-ubara.com/excel5/">エクセル雑感</A></li>
        </ul>
      </li>
      <li><a href="../excel_vba1.html" tppabs="https://excel-ubara.com/excel_vba1.html">マクロVBA入門編<span>VBA Beginner</span></a>
        <ul>
          <li><a href="../excelvba1/index.htm" tppabs="https://excel-ubara.com/excelvba1/">マクロVBA入門</a></li>
          <li><a href="../excelvba1r/index.htm" tppabs="https://excel-ubara.com/excelvba1r/">マクロVBA再入門</a></li>
          <li><a href="../excelvba2/index.htm" tppabs="https://excel-ubara.com/excelvba2/">マクロ記録でVBA</a></li>
          <li><a href="../excelvba9/index.htm" tppabs="https://excel-ubara.com/excelvba9/">マクロVBA練習問題</a></li>
          <li><a href="../MOS_VBA/index.htm" tppabs="https://excel-ubara.com/MOS_VBA/">VBAエキスパート対策</a></li>
          <li><A href="../excelvba8/index.htm" tppabs="https://excel-ubara.com/excelvba8/">マクロVBA関数</A></li>
          <li><A href="../vba100/index.htm" tppabs="https://excel-ubara.com/vba100/">VBA100本ノック</A></li>
        </ul>
      </li>
      <li><a href="../excel_vba2.html" tppabs="https://excel-ubara.com/excel_vba2.html">マクロVBA応用編<span>VBA Advanced</span></a>
        <ul>
          <li><A href="../excelvba3/index.htm" tppabs="https://excel-ubara.com/excelvba3/">ユーザーフォーム入門</A></li>
          <li><A href="../vba_class/index.htm" tppabs="https://excel-ubara.com/vba_class/">VBAクラス入門</A></li>
          <li><A href="index.htm" tppabs="https://excel-ubara.com/excelvba5/">マクロVBAサンプル集</A></li>
          <li><A href="../excelvba4/index.htm" tppabs="https://excel-ubara.com/excelvba4/">マクロVBA技術解説</A></li>
          <li><A href="../excelvba7/index.htm" tppabs="https://excel-ubara.com/excelvba7/">エクセル顧客管理</A></li>
          <li><A href="../EXCEL/vba_reference.html" tppabs="https://excel-ubara.com/EXCEL/vba_reference.html">VBAリファレンス</A></li>
        </ul>
      </li>
      <li><a href="../excel_other.html" tppabs="https://excel-ubara.com/excel_other.html">その他（Excel以外）<span>Other than Excel</span></a>
        <ul>
          <li><A href="../python/index.htm" tppabs="https://excel-ubara.com/python/">Python入門</A></li>
          <li><A href="../vba_sql/index.htm" tppabs="https://excel-ubara.com/vba_sql/">SQL入門</A></li>
          <li><A href="../spreadsheet1/index.htm" tppabs="https://excel-ubara.com/spreadsheet1/">スプレッドシート入門</A></li>
          <li><A href="../apps_script1/index.htm" tppabs="https://excel-ubara.com/apps_script1/">GAS入門</A></li>
        </ul>
      </li>
      <li><a href="../siteguide.html" tppabs="https://excel-ubara.com/siteguide.html">サイト案内<span>site map</span></a>
        <ul>
          <li><A href="../EXCELNEW.html" tppabs="https://excel-ubara.com/EXCELNEW.html">新着記事一覧</A></li>
          <li><A href="../EXCELRANK.html" tppabs="https://excel-ubara.com/EXCELRANK.html">アクセスランキング</A></li>
          <li><A href="../sitemap.html" tppabs="https://excel-ubara.com/sitemap.html">サイトマップ&nbsp;&nbsp;</A></li>
          <li><a href="../business/index.htm" tppabs="https://excel-ubara.com/business/">旧トップページ&nbsp;&nbsp;</a></li>
          <li><A href="../query.html" tppabs="https://excel-ubara.com/query.html">お問い合わせ&nbsp;&nbsp;</A></li>
        </ul>
      </li>
    </ul>
  </nav>

  <div id="pan"><ul itemscope itemtype="http://schema.org/BreadcrumbList">
<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
<a itemprop="item" href="../index.htm" tppabs="https://excel-ubara.com/">
<span itemprop="name">ホーム</span></a>
<meta itemprop="position" content="1" />
</li>
<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
<a itemprop="item" href="../excel_vba2.html" tppabs="https://excel-ubara.com/excel_vba2.html">
<span itemprop="name">マクロVBA応用編</span></a>
<meta itemprop="position" content="2" />
</li>
<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
<a itemprop="item" href="index.htm" tppabs="https://excel-ubara.com/excelvba5/">
<span itemprop="name">VBAサンプル集：そのまま使える実用マクロ集</span></a>
<meta itemprop="position" content="3" />
</li>
</ul></div>
  <div class="ads1">
    <center>
    <script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <!-- yama21 -->
    <ins class="adsbygoogle"
        style="display:block"
        data-ad-client="ca-pub-6511020045004282"
        data-ad-slot="1104944574"
        data-ad-format="auto"
        data-full-width-responsive="true"></ins>
    <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
    </script>
    </center>
  </div>

  <div id="contents" class="inner">
    <div id="contents-in">
      <div id="main">
        <section>
          <span style="line-height:20px;float:right" align="right">最終更新日：2021-01-29</span>
<h2 align="center">VBAサンプル集：そのまま使える実用マクロ集</h2><p><br>
ExcelマクロVBAの実用的なサンプル集として、なるべくそのまま使えるようにVBAコードを書いています。<br>
VBAコードの細部についての技術的な解説は少なめになっています。<br>
技術的な解説は、以下をご覧ください。</p>
<div class="main-indent"><strong><a href="../excelvba1/index.htm" tppabs="https://excel-ubara.com/excelvba1/" target="_blank">マクロVBA入門</a></strong><div class="details">VBAはExcelの操作を自動化するマクロ機能で使われているプログラミング言語です。「VisualBasicforApplications」の略になります。マクロVBA入門シリーズでは、始めはより詳しく丁寧に解説し、少しずつ難易度を上げることで無理なく学習を進められるようにしています。</div>
<strong><a href="../excelvba4/index.htm" tppabs="https://excel-ubara.com/excelvba4/" target="_blank">マクロVBA技術解説</a></strong><div class="details">ExcelマクロVBAの、良くある問題や少々難度の高い使い方等に対する技術的解説です。掲載しているVBAコードは解説用のコードとなっていますので、適宜変更してお使いください。そのまま使えるサンプル集は、マクロVBAサンプル集をお探しください。</div>
</div><p><br>
VBAサンプル集として「そのまま使えるVBAコード」とは言え、全ての環境においてそのままで実行可能であるとは限りません。<br>
PC環境やExcelのバージョンによってはエラーや実行結果が違ってくることもありえます。<br>
あくまで掲載時点で特定環境において動作確認したものになりますので、実行環境により修正が必要になる場合もあります。<br>
決して製品版の販売ではありません、あくまでサンプルVBAであることは承知おきください。<br><div class="br2"><br></div></p>
<h3>ブック・シート：マクロVBAサンプル集</h3>
<div class="main-indent">
<strong><a href="EXCELVBA201.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA201.html">連続セル範囲の選択</a></strong><div class="details">エクセルのVBAでは、連続セル範囲に対しての処理は頻繁にでてきます。連続セル範囲を選択したり、クリアしたり。以下では、いろいろな記述方法を紹介します。このような表で、データ部（B3～F7）を選択または消去する場合のいろいろなVBAの書き方を紹介します。</div>
<strong><a href="EXCELVBA202.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA202.html">１行置きにする行挿入（Insert）</a></strong><div class="details">A列に連続データが入っているとします。これを１行置きにします。ポイントは下から行うことです。上からやると、どんどん下に追いやられてしまいます。（Step2とするのもありですが、普通は下からやりましょう） Cells(Rows.Count,1).End(xlUp).Row これで、最終行を取得しています。</div>
<strong><a href="EXCELVBA203.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA203.html">シートの追加・削除（Add,Delete）</a></strong><div class="details">マクロVBAでいろいろ処理する場合、作業用のシートを追加し、そのシート上で処理した結果を他シートに反映させる等は良く使うテクニックです。このような場合に使う、シートの追加と削除についてのVBA例文です。シートの追加・削除の基本および文法については、以下を参照してください。</div>
<strong><a href="EXCELVBA204.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA204.html">シートの複数選択（Select）</a></strong><div class="details">複数のワークシートを選択方法です。いわゆる作業グループになります。手動では作業グループはかなり注意が必要ですが、VBAではシートのコピーや印刷等で必要になる場合もでてきます。複数シートの印刷（PrintOut） 以下では、シート名は、「Sheet1」「Sheet2」「Sheet3」として、VBAサンプルを記載しています。</div>
<strong><a href="EXCELVBA205.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA205.html">複数シートの印刷（PrintOut）</a></strong><div class="details">複数シートをVBAで印刷する方法です。ワークシートが「Sheet1」「Sheet2」「Sheet3」…があるものとします。そのような場合に、指定のワークシートのみ印刷する場合です。以下では、テスト実行しやすいように、Preview:=True これでプレピュー表示にしています。</div>
<strong><a href="EXCELVBA206.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA206.html">重複削除してコピー（AdvancedFilter）</a></strong><div class="details">重複データを排除して、別シートにコピーする場合です。以下の表で説明します。フィルターオプションを使います。このマクロは、この指定と同じになりります。似たような方法ですが、コピー部分を自分で記述する場合です。</div>
<strong><a href="EXCELVBA207.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA207.html">ブックを安全確実に開く方法（Open）</a></strong><div class="details">マクロVBAの中で、他のブックを開く事はよくあります、ブックを開く時、ブックが存在しているか、既に開いてないか これらのチェックをせずに開いてしまうと、マクロがエラー停止してしまいます。ここでは、これらのチェック方法についての具体的なVBAコードを紹介します。</div>
<strong><a href="EXCELVBA208.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA208.html">ブックを閉じる（Close）</a></strong><div class="details">ブックを閉じる時の処理方法です。まずは、保存して閉じる場合。これは、次のように書くこともできます。Subsample2()ThisWorkbook.CloseSaveChanges:=TrueEnd Sub では、保存しないで閉じる場合。</div>
<strong><a href="EXCELVBA217.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA217.html">他ブックを開いて閉じる（Open,Close）</a></strong><div class="details">他のExcelブックを開いて、何らかの処理（転記等）を実行した後に、そのブックを閉じる。VBAでは、よくあるパターンですね。ワークシート関数では出来ない、VBAならではの処理とも言えます。以下では、他ブックを開いて閉じる場合の基本的なVBAサンプルと簡単な解説をします。</div>
<strong><a href="EXCELVBA242.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA242.html">ブックを開かずにセル値を取得（ExecuteExcel4Macro,Excel.Application）</a></strong><div class="details">「ブックを開かずにセル値を取得」に関する検索が非常に多いようです。おそらく、ExecuteExcel4Macroに関連しているとか、もしくは、大量のファイルがある為、VBAの処理時間がかかってしまうと言うものでしょう。ExecuteExcel4Macroについての簡単な解説は、「ExecuteExcel4Macroについて」サンプルを通して、</div>
<strong><a href="EXCELVBA209.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA209.html">罫線を簡単に引く（Borders,BorderAround）</a></strong><div class="details">エクセルでは、罫線を引く事が多いです。この罫線は、以外に処理時間もかかりますし、やり方によっては、VBAの行数も多くなります。とにかく、簡単に罫線を引く方法です。以下の表を作成する場合です。罫線を引く順番等、いろいろありますが、とにかく短いコードにしてみます。</div>
<strong><a href="EXCELVBA210.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA210.html">マクロVBAの開始時と終了時に指定しておくべきApplicationのプロパティ</a></strong><div class="details">マクロVBAの開始時および終了時に指定した方が良いApplicationのプロパティの開設です。特に重要なもの、マクロVBAの処理速度に関係するものを紹介します。Applicationのプロパティの詳細については以下をご覧ください。</div>
<strong><a href="EXCELVBA211.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA211.html">オートフィルター（AutoFilter）</a></strong><div class="details">エクセルでは、定番機能のフィルターです。「Sheet1」のA列でフィルターし、「Sheet2」へコピーします。ごく基本的なフィルターです。フィルターのセル範囲指定は、いろいろな指定が可能です。「連続セル範囲の選択 」も参考にして下さい。</div>
<strong><a href="EXCELVBA212.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA212.html">日付のオートフィルタ（AutoFilter）</a></strong><div class="details">とても便利なオートフィルターですが、日付となると、結構大変です。以下の表で説明します。普通は、こんなように指定します。Operator:=xlFilterValues は2007以降で追加された機能です。</div>
<strong><a href="EXCELVBA213.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA213.html">印刷ダイアログを使用する（xlDialogPrint）</a></strong><div class="details">入力しやすいように、セルに色をつけている事が多いと思いますが、印刷時には、ちょっとじゃまな場合もあります。インク（トナー）も無駄ですしね。印刷時に色指定を解除して印刷する方法になります。Application.Dialogs(xlDialogPrint).Show 印刷タイアログを表示します。</div>
<strong><a href="EXCELVBA214.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA214.html">名前定義の一覧と削除（Name）</a></strong><div class="details">名前定義は使い方によっては、とても便利な機能ですが、長く使っているブックでは、とても多くの名前定義が入ってしまっていたり、参照エラーを起こしている名前定義が多数あったりと、管理に困る場合も多々出てきます。これらが発生する原因としては、ブック間のシートコピーで増えていってしまったり、シートおよびセルの削除によって参照エラーになったままにしておくことで、</div>
<strong><a href="EXCELVBA240.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA240.html">シートを名前順に並べ替える</a></strong><div class="details">シートを名前順に並べ替える方法になります。配列を使っていますが、配列が難しい場合は、シートに書き出して処理すれば良いでしょう、並べ替えもシート上なら簡単です。上記では、シート名を文字列として処理しています。</div>
<strong><a href="EXCELVBA250.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA250.html">数式内の不要なシート名を削除する（HasFormula）</a></strong><div class="details">複数のシートにまたがる数式を入力していると、自身のシート名!が数式についてしまいます、この自身のシート名!は不要であり、式を見づらくしてしまいます、この不要なシート名を、VBAで一括削除します。ブックの全シート、全セルを対象として、数式の中から、自身のシート名!を削除するVBAになります。</div>
<strong><a href="EXCELVBA258.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA258.html">数式の参照しているセルを取得する</a></strong><div class="details">セルに入っている数式の参照しているセルを取得するには、RangeのPrecedentsプロパティを使いますが、このプロパティは他のシートの参照には対応していません。また、セルの参照先を取得するプロパティには、Dependentsプロパティがあります。</div>
<strong><a href="EXCELVBA262.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA262.html">増殖した条件付き書式を整理統合する</a></strong><div class="details">コピペによって条件付き書式は際限なく増加していきます。あまり増えすぎると、Excelの動作が遅くなる場合もありますし、条件や書式を変更したい時にも困ることになります。このような場合は、条件付き書式を消して再設定するしかなくなります、これを解決するVBAを考えてみました。</div>
<strong><a href="EXCELVBA263.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA263.html">条件付き書式で変更された書式を取得する</a></strong><div class="details">条件付き書式が設定されている場合、当然ですが見た目は、本来そのセルに設定されている書式ではなく、条件付き書式の条件によって設定されている書式になります。VBAで、この条件付き書式によって設定された書式を取得します。これが取得できるようになったのは、Excel2010からですので、このページで紹介するVBAコードはExcel2010以降でのみ有効なものです。</div>
<strong><a href="EXCELVBA272.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA272.html">セル結合/解除でセル値を退避/回復</a></strong><div class="details">セル結合の弊害はネットに溢れているのでここで改めて説明の必要はないでしょう。とはいえ、セル結合したい場合もありますよね、人間だからね。VBAで適切に処理すればセル結合もきちんと処理は可能です。第85回.結合セルの扱い｜VBA入門 しかし、セル結合した時にどうしようもないのが、各セル値が失われてしまうことです。</div>
<strong><a href="EXCELVBA273.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA273.html">セル結合なんて絶対に許さないんだからね</a></strong><div class="details">セル結合の弊害はネットに溢れているのでここで改めて説明の必要はないでしょう。とはいえ、ついついセル結合してしまう事ありますよね、人間だからね。VBAで適切に処理すればセル結合もきちんと処理は可能です。</div>
<strong><a href="EXCELVBA274.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA274.html">セルの数式をネスト色分けしてコメント表示</a></strong><div class="details">数式のネストが3段階を超えてくる、なかなか読むのが辛くなってきます。数式を改行したりして見やすくするにも限界があります。特別に複雑な数式を解析する場合は、以下を試してみてください。Excelシートの複雑な計算式を解析するVBA このようなツールを使うほどではないが、数式を色分けしてちょっと見やすくなれば、</div>
<strong><a href="EXCELVBA277.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA277.html">セル結合して表を見やすくする（非推奨）</a></strong><div class="details">最近はセル結合が忌み嫌われているようです。でもでも、やはり見やすいですよね。最終的な出力シートならセル結合して見やすくしたいことだってありますよね。セル結合を解除して値を埋めるマクロVBAは巷に多数あります。</div>
</div>
<div class="main-indent">
<div class="ads1">
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="6991829975"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div><h3>いろいろ：マクロVBAサンプル集</h3>
<div class="main-indent">
<strong><a href="EXCEL101.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL101.html">ユーザー定義関数でフリガナを取得する（GetPhonetic）</a></strong><div class="details">ワークシート関数の、「PHONETIC」では、他のソフト等からコピペした漢字は取得できません。そこで、VBAでユーザー定義関数を作成し、読みを取得できるようにします。A列はメモ帳よりコピペしました。B列に、ユーザー定義関数を指定して、振り仮名を取得しています。</div>
<strong><a href="EXCEL102.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL102.html">ユーザー定義関数でハイパーリンクのURLを取得（Hyperlink）</a></strong><div class="details">ネットから、何らかの一覧をエクセルにコピペすると、文字列や画像等に、リンクの設定がくっついてきます。URLが表記されていれば良いですが、表示されていない事の方が多いでしょう。そこで、VBAでユーザー定義関数を作成し、URLを取得できるようにします。</div>
<strong><a href="EXCEL103.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL103.html">カラーのコード取得、256RGB⇔16進変換</a></strong><div class="details">WEB制作等で使用する16進のFFFFFFと、RGB(255,255,255)の変換をワークシートで行います。10進で指定、16進で指定、スクロールバーで指定、そして、セルの背景色・文字色を直接指定することができるようにしています。指定した値が、直ちにセルに反映する為、いろいろと色を選定する時の参考になると思います。</div>
<strong><a href="EXCEL104.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL104.html">時刻になったら音を鳴らして知らせる（OnTime）</a></strong><div class="details">エクセル作業に夢中になって、時間を忘れて大慌てって事ありませんか。えっ、無い、そうですか、ではさようなら… あると言う人は以下のプログラムをどうぞ。作成するシート まず、以下ようなシートを作ります。標準モジュールのVBAコード 標準モジュールに以下を追加します。</div>
<strong><a href="EXCEL105.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL105.html">指定文字、指定数式でジャンプ機能（Union）</a></strong><div class="details">ジャンプ機能がありますが、ジャンプのセル選択では特定の文字や数式は指定できません。ある文字を含むセルや、ある関数を含むセルを一括で選択状態にするのは、ジャプ機能では出来ません。そこで、マクロVBAでこれらができるようにして見ました。</div>
<strong><a href="EXCEL106.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL106.html">「値の貼り付け」をショートカットに登録（OnKey）</a></strong><div class="details">コピーペーストの質問で、よく目にするのは、値の貼り付けが面倒だというものです。どうも、ショートカットが無いからのようです。ネットを調べて見たのですが、どれもしっくりこないので、作ってみました。いろいろな方法が考えられるのですが、簡単かつ直ぐに使えて、他の人にも配布可能なものが良いと思います。</div>
<strong><a href="EXCEL107.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL107.html">「セルの結合」をショートカットに登録（OnKey）</a></strong><div class="details">「値の貼り付け」をショートカットに登録が好評だったので（本当かな）、その第二弾！セルの結合をショートカットに登録します。作り方は、前回の、「値の貼り付け」をショートカットに登録と同様です。コピーペーストの質問で、よく目にするのは、値の貼り付けが面倒だというものです。</div>
<strong><a href="EXCEL108.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL108.html">半角カナのみ全角カナに変換する</a></strong><div class="details">半角カナのみ全角カナに変換します。ネットを探してみたところ、あるにはあるのですが、どうも中途半端。直ぐに使えて、汎用性のあるプログラムが見つからなかったので、作ってみました。ではプログラムです。PrivateSub半角カナto全角カナ(ByRefobjRangeAsRange)DimstrInAs String'元の文字列DimstrOutAsStrin…</div>
<strong><a href="EXCEL112.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL112.html">計算式の元となる数値定数を消去する（Precedents）</a></strong><div class="details">指定のセルの計算式が参照しているセルの数値定数をクリアします。ただし、参照しているセルが、さらに他のセルを参照している場合は、その先のセルを消去します。つまり、計算式の入っているセルを起点にして、その参照先をすべて検索し、計算式の元となるセル（数値定数が入っているセル）の値をクリアします。</div>
<strong><a href="EXCEL117.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL117.html">Beep音で音楽（Beep,Sleep）</a></strong><div class="details">時々検索されるので、Beep音で音楽を演奏してみましょう。プログラムはほぼAPIをCALLするだけです。まずは、シートです。こんな感じです。ドレミの周波数は結構適当なので、詳しい方は自分で調整して下さい。</div>
<strong><a href="EXCELVBA216.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA216.html">日付の検索（配列の使用）</a></strong><div class="details">日付の検索は、いろいろと面倒です。Findメソッドで検索する場合、表示書式に左右されますので、表示書式を変更しただけで、検索されなくなります。これは、手作業での検索においても同様になりますが、マクロとしてはいかにも不便です。</div>
<strong><a href="EXCELVBA219.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA219.html">ストップウォチ（1/100秒）（Timer）</a></strong><div class="details">ストップウォッチを作ってみましょう。機能は簡単に、・ボタンを押すと、0からスタートし時間表示が進む。・もう一度ボタンを押すとストップする。これだけです。つまり、１つのボタンで、マクロをスタートさせたり、ストップさせたりする方法の紹介になります。</div>
<strong><a href="EXCELVBA261.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA261.html">ストップウォチ改（1/100秒）（Timer）</a></strong><div class="details">ストップウォッチを作る時の、基本的なVBAコードを以前に公開しましたが、時々お問い合わせをいただくことがあり、それなりに重宝されているようです。そこで、もう少し機能強化したものを作成した次第です。※Office365でスムーズに動作しないので、Sleepを入れて対処してみました。</div>
<strong><a href="EXCELVBA220.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA220.html">重複の無いユニークなデータ作成</a></strong><div class="details">簡単な例で シート「元データ」A列に、１行目に見出し、２行目以降にデータが入っている シート「ユニーク」このA列に、シート「元データ」のA列をユニーク（一意）にして取り出します。まずは、エクセルらしく、ワークシート関数とフィルターを使って 非常にエクセルらしい、素直な処理です。</div>
<strong><a href="EXCELVBA222.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA222.html">WEBデータの取得方法</a></strong><div class="details">WEBページのデータを取得して、エクセルのデータとして取り込みたいとの要望が多いようです。マクロVBAでWEBページのデータを取得する方法はいろいろあります。QueryTables InternetExplorer MSHTML MSXML2 順番に、以下で説明します。</div>
<strong><a href="EXCELVBA223.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA223.html">右クリックメニューの変更（CommandBars）</a></strong><div class="details">セルを右クリックした時のショートカットメニューを変更します、右クリックメニューからマクロを起動できるようにすることで利便性が向上します・シートモジュールに以下を追加します。標準モジュールに以下を追加 SubAA() ActiveCell.Value=&quot;AA&quot; EndSub SubBB1() ActiveCell.Value=&quot…</div>
<strong><a href="EXCELVBA224.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA224.html">エクセルのアイコン取得（FaceID）</a></strong><div class="details">エクセル内のアイコンを取得します。「右クリックメニューの変更」のFaceIdとして使用します。2003までなら、ツールバーが追加されます。2007以降では、リボンのアドインの中に追加されます。ConststartNoAsInteger=1'開始番号を指定 ConststopNoAsInteger=50'終了番号を指定 この数値を変更して実行して下さい。</div>
<strong><a href="EXCELVBA243.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA243.html">素数を求めるマクロ</a></strong><div class="details">素数とは、1と自分自身以外に正の約数を持たない、1でない自然数のことです、この素数を求めて、シートに出力するマクロになります。特に何かに使えると言う事もないので、PCの計算能力って、どの程度なのかを実感してみるくらいの事でしょうか。注意 このマクロはオーバーフローするまで停止しません。</div>
<strong><a href="EXCELVBA244.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA244.html">入力規則のリスト入力の妥当性判定</a></strong><div class="details">入力規則のリスト入力は、Excelの機能の中でも頻繁に使われる機能です。入力規則の目的として、リスト内のデータのみの入力に限定したいと言う事になりますが、コピペで値の貼り付けを行うと、どんな値でも入力出来てしまいます。このエクセルの仕様はとても不便なものですが仕方ありません。</div>
<strong><a href="EXCELVBA245.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA245.html">配色を使用したカラー設定を固定カラーに変更</a></strong><div class="details">Excel2007以降なら配色を選択して作成した場合、作成したシートを他のブックに移すと色が変わってしまいます、そこで、配色ではなくRGB値で色を再設定することで、元々の色をそのままにして、他のブックに移すことが出来るようにします。以下は、この目的で色を再設定するマクロVBAになります。</div>
<strong><a href="EXCELVBA247.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA247.html">指定セルに名前定義されているか判定する</a></strong><div class="details">名前定義は、VBAでは、セル位置の特定において重要な役割を持ちます、あるセルが名前定義されているか判定するVBAになります。ここでは、名前定義されている場合は、その名前定義を削除するVBAサンプルとしています。指定セル範囲が何らかの名前定義に含まれているか Subsample1(rngAsRange) DimnmAsName ForEachnmInNam…</div>
<strong><a href="EXCELVBA251.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA251.html">Excel2003(xls)を2007以降(xlsx,xlsm)に変換する（HasVBProject）</a></strong><div class="details">Excel2003形式(xls)のファイルを、一括でExcel2007以降形式(xlsx,xlsm)に変換するマクロVBAサンプルコードです。サンプルコードでは、サブフォルダ「Excelファイル」にあるxlsを、マクロ無しならxlsx、マクロ有りならxlsmにして保存しています。</div>
<strong><a href="EXCELVBA252.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA252.html">ハイパーリンクからファイルのフルパスを取得する</a></strong><div class="details">ハイパーリンクのリンク先ファイル情報を取得しようとすると、なかなか難しいことになります、ハイパーリンクからパスを取得すると相対パスとなり、簡単にはファイル情報を取得出来ません。以下のサンプルでは、ハイパーリンクの設定されているセルの右隣のセルに更新日時を出力しています。</div>
<strong><a href="EXCELVBA253.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA253.html">ボタンに表示されているテキストを取得（Application.Caller）</a></strong><div class="details">メニューのシートを作成して、ボタンを配置、そしてボタンにより指定シートに移動する。よくありますが、ボタン一つずつに別々（移動先のシート毎に）のマクロを作成するのは面倒です、そこで、一つのマクロで済ませる方法の紹介です。Application.Caller Application.Callerは、VBAを呼び出した方法についての情報を返します。</div>
<strong><a href="EXCELVBA254.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA254.html">Excelの表をPowerPointへ図として貼り付け</a></strong><div class="details">PowerPointを作っていると、エクセルの表を挿入したいことが多いです、単発作業なら手作業で十分ですが、定期的にやる場合や、数が多いと大変ですので、マクロで自動化したくなります。Excelの表をPowerPointへ図として貼り付けるVBA Excelの表をPowerPointへ図として貼り付けるVBAの解説 上記は、</div>
<strong><a href="EXCELVBA280.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA280.html">VBAで表やグラフをPowerPointへ貼り付ける</a></strong><div class="details">エクセルのグラフや表範囲をパワーポイントへ貼り付ける方法の解説です。1つ2つの貼り付けを単発で行うのであれば手作業でも良いですが、何十個も、そして、何回も貼り付けを行うのであればVBAで自動化したいところです。エクセル パワーポイント 表やグラフをPowerPointへ貼り付けるVBA PowerPointを使う準備と保存終了 DimppAppAsNew…</div>
<strong><a href="EXCELVBA259.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA259.html">フォルダ（サブフォルダも全て）削除する、Optionでファイルのみ削除</a></strong><div class="details">VBAでフォルダを削除するにはRmDirステートメントを使いますが、サブフォルダやファイルが入っている場合は、RmDirはエラーとなります。そこで、サブフォルダやファイルがある場合は、FileSystemObjectを使います。以下のサンプル使用時には、「ツール」→「参照設定」で、「MicrosoftScriptingRuntime」にチェックを付けてく…</div>
<strong><a href="EXCELVBA267.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA267.html">Shift_JISのテキストファイルをUTF-8に一括変換</a></strong><div class="details">本サイトの文字コードは開設当初からShift_JISでしたが、昨今の事情を考えてUTF-8に変更することにしました。そこで既存記事全てを一括で変換することになり、これをVBAでやりましたので、その時のVBAコードを掲載しておきます。以下のVBAコードはサイトのUTF-8変更にあたり急遽作成したものですが、</div>
<strong><a href="EXCELVBA269.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA269.html">VBAコードの全プロシージャー・プロパティ一覧を取得</a></strong><div class="details">VBAの開発規模がある程度大きくなってくると、VBAソース管理の必要性を感じることもあると思います。モジュールの数も増えてきて、プロシージャー・プロパティが膨大になってきます。以下は、指定ブックの全モジュールの全プロシージャー・プロパティを一覧にするVBAサンプルです。</div>
<strong><a href="EXCELVBA276.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA276.html">数式バーの高さを数式の行数で自動設定</a></strong><div class="details">数式バーの高さは、操作で変更しない限り一定の高さのままになっています。通常は1行表示になっている場合が多いと思いますが、その場合、セル内で改行されていると最初の1行しか見ることができません。値の場合はセルに表示されているのであまり問題ありませんが、数式の場合はセル編集にしないと数式の全部を見ることができません。</div>
<strong><a href="EXCELVBA278.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA278.html">図形オートシェイプ（Shape）の複数選択</a></strong><div class="details">図形オートシェイプを複数選択するVBAについてのサンプルと簡単な解説です。Shapeオブジェクトは非常に複雑で、簡単な操作でもVBAの書き方が分からない場合も多くあります。Shapeの基本については以下を参照してください。</div>
<strong><a href="EXCELVBA279.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA279.html">GoogleスプレッドシートをExcelにインポートする</a></strong><div class="details">Googleスプレッドシートをエクセルに取り込みたい場合、手動のコピペでも出来ますが、もう少し自動化したくなります。スプレッドシートをエクセルに取り込む場合の方法について解説します。スプレッドシートのURLを取得 スプレッドシートを開いたら、右上にある「共有」をクリックします。</div>
<strong><a href="EXCELVBA281.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA281.html">多階層フォルダ（ディレクトリ）の作成</a></strong><div class="details">フォルダを作成する場合、親フォルダの下にサブフォルダ作成します。VBAでフォルダを作成するには、MkDirステートメントまたはFileSystemObjectを使用しますが、これらは、親のフォルダから順次作成していく必要があります。Win32APIを使用することで、多階層フォルダを一括で作成する事もできます。</div>
</div>
<h3>配列：マクロVBAサンプル集</h3>
<div class="main-indent"><strong><a href="EXCELVBA228.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA228.html">1次元配列の並べ替え（バブルソート,挿入ソート、クイックソート）</a></strong><div class="details">配列（1次元）の並べ替え方法について、バブルソート、挿入ソート、クイックソートのサンプルになります。元来エクセルには、ワークシートの並べ替え機能があります。ワークシートにデータを書き出して、ワークシートの並べ替え機能を使えるのですが、どうしても、配列をワークシートに途中で書き出すと言うのは面倒なものです。</div>
<strong><a href="EXCELVBA229.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA229.html">2次元配列の並べ替え（バブルソート,クイックソート）</a></strong><div class="details">配列（2次元）の並べ替え方法について、バブルソートとクイックソートのサンプルになります。2次元配列の並べ替えと言えば、まさにワークシートの並べ替え機能になります。本来は、ワークシートにデータを書き出して、ワークシートの並べ替え機能を使えば良いのですが、しかし、どうしても、配列をワークシートに処理途中で書き出すと言うのは面倒なものです。</div>
<strong><a href="EXCELVBA233.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA233.html">DIR関数で全サブフォルダの全ファイルを取得</a></strong><div class="details">指定フォルダ以下の全サブフォルダ内の全ファイルを取得する場合、通常はFileSystemObjectの再帰モジュールで実現しますが、これをDir関数だけで、かつ、再帰ではなく二重ループで実現しています。FileSystemObjectの再帰プロシージャーについては、エクセルでファイル一覧を作成 こちらをご覧ください。</div>
<strong><a href="EXCELVBA264.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA264.html">順列の全組み合わせ作成と応用方法</a></strong><div class="details">配列の要素の順番を入れ替えて、順列を作成しします、ここでは、順列作成のアルゴリズムの解説より、それを使う方法についてのサンプルが主体となります。順列は、出現順序の違いが問題となる場合に必要となります。順列とは 1,2,3の場合であれば、以下の6通りになります。</div>
<strong><a href="EXCELVBA275.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA275.html">スピルに対応したXSPLITユーザー定義関数（文字区切り）</a></strong><div class="details">エクセルにスピルが登場して、VBAのユーザー定義関数の用途も広がってきていると思います。そこで、文字列を指定した記号・文字列で区切て、セルに出力するユーザー定義関数を作ってみましょう。VBAにはSplit関数がありますが、これをワークシート関数として使えるようにしてみましょうという事です。</div><br>
</div>
<div class="main-indent">
<div class="ads1">
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="7467492230"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div><h3>図形：マクロVBAサンプル集</h3>
<div class="main-indent"><strong><a href="EXCELVBA215.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA215.html">コメントの位置移動と自動サイズ調整とフォント設</a></strong><div class="details">コメントの位置をセルの横にぴったりくっつけて、サイズし入力文字列に応じて自動サイズ調整に設定します。正直言って、そんなに使い道があるとは思えませんが、ごくたまに必要にる場合も出てきます。そもそも、この位置はコメントの表示で、常時表示する場合の位置です。</div>
<strong><a href="EXCEL109.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL109.html">図をセル内に強制的に収める（Shape）</a></strong><div class="details">図（画像等）をエクセルに貼り付けた後、セルの移動と一緒に動かない場合があります。もちろん、図の書式のプロパティでは、「セルに合わせて移動」にしてある場合の話です。図がセルを大きくはみ出しているいる場合（隣のセルよりさらにはみだしている場合）は、セルのコピー、移動にくっていてきません。</div>
<strong><a href="EXCEL110.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL110.html">図を確認しながら消していく（Shape）</a></strong><div class="details">行削除や、列削除等により、図が見えなくなってしまう事があります。しかも、セルのコピーで沢山出来てしまい、困った事ありませんか。「ジャンプ」→「セル選択」で、オブジェクトで一括選択して削除する事は出来ます。</div>
<strong><a href="EXCEL113.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL113.html">オートシェイプを他ブックの同じ位置に貼り付ける（Shapes,DrawingObjects）</a></strong><div class="details">コメントでリクエストを頂きました。「１つのシートにバラバラにあるオートシェープを一度に選択して、コピーし、ほかのブックのあるシートの同じ位置にペーストしたい」というもの。これには色々な問題が含まれています。</div>
<strong><a href="EXCEL115.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL115.html">全シートの画面キャプチャを取得する（keybd_event）</a></strong><div class="details">資料等の作成で、画面キャプチャすることがあると思います。そこで、全シートの画面キャプチャを、新規シートに全て取得するプログラムです。Alt+PrntScrnで、エクセルのウインドウのみキャプチャしています。</div>
<strong><a href="EXCELVBA226.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA226.html">写真の取込方法について（Pictures.Insert,Shapes.AddPicture）</a></strong><div class="details">写真を取り込んで、アルバムのようにしたり、各種の資料を作ったりと、写真をエクセルに取り込む機会は多いようです。しかし、最近は写真のサイズも大きくなり、手動で取り込んだままではスクロールもままならない状態となってしまいます。そこで写真ファイルを指定し、A列に上から順番に貼り付け、さらにセル内に収まるように縮小するVBAになります。</div>
<strong><a href="EXCELVBA232.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA232.html">写真をサムネイルに変換して取り込む（Shapes.AddPicture）</a></strong><div class="details">写真を取り込んだ場合、リンクすると元のファイルが無いと画像が見られず、リンクせずに取り込むとファイルサイズが巨大化してしまいます。そこで、サムネイルを作成しそれをセルに貼り付け、元のファイルへのハイパーリンクを付けておくようにします。写真の取込方法の基本については以下をご覧ください。</div>
<strong><a href="EXCELVBA218.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA218.html">円グラフの色設定（Chart,SeriesCollection）</a></strong><div class="details">円グラフの色を、元の表から設定します。以下は、ウイザードでグラフを作成した状態です。A列に指定した、塗りつぶし色を、グラフに反映させます。たった、これだけです。手作業よりは、はるかに簡単ですし、応用範囲が広いと思います。</div>
<strong><a href="EXCELVBA221.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA221.html">棒グラフ・折れ線グラフのサンプルマクロ</a></strong><div class="details">グラフはプロパティ・メソッドも多いので、自分の覚書もかねて掲載しました。この元データから、以下のグラフが作成されます。解説は、プログラム内のコメントを参考にして下さい。系列データのデータ数が増えた時に、データ範囲を変更するマクロも掲載しておきます。</div>
<strong><a href="EXCELVBA225.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA225.html">人口ピラミッドのグラフをマクロで作成</a></strong><div class="details">人口ピラミッドのグラフ作成は、設定項目が多く、かなり面倒です。マクロでサクッと作って、細かい部分を手動で設定できれば楽です。この表から、以下のグラフを作成します。手動で設定すると、かなり多くの手順が必要になります。</div>
<strong><a href="EXCELVBA241.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA241.html">グラフで特定の横軸の色を変更し基準線を引くマクロ</a></strong><div class="details">特定の横軸のみ色を変更する、つまり、基準値や下限・上限等に線を引きたい場合のVBAになります。手動でやろえとすると結構面倒なので、いざやろうとするとなかなか出来なかったりします。グラフの元データに線を引きたい数値の系列をシートに追加しておくと、もう少し楽にできますが、ここでは、シートには手を加えずに基準線を引いています。</div>
<strong><a href="EXCELVBA246.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA246.html">グラフのデータ範囲を自動拡張するマクロ</a></strong><div class="details">グラフのデータ範囲を自動で拡張・縮小するマクロVBAになります、グラフのデータ範囲を変更する事は度々ありますが、作業自体は大した事はないのですが、やはり面倒ですし、グラフの数が多いと、結構な手間になります。注意 以下は、棒グラフ・折れ線グラフの場合になります。</div>
<strong><a href="EXCELVBA256.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA256.html">画像のトリミング（PictureFormat,Crop）</a></strong><div class="details">エクセルで画像をトリミングするマクロになります、画像の一部を四角に切り取るVBAコードの解説です。図形で切り取る等は、自動記録のコードをほぼそのまま使えるはずですので、ここでは、基本的かつ汎用的な、一部を四角に切り取るVBAコードについて、サンプルコードを掲載して解説します。</div>
</div>
<h3>イベント：マクロVBAサンプル集</h3>
<div class="main-indent"><strong><a href="EXCELVBA234.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA234.html">ブックを開いた時に指定シートを表示（Workbook_Open）</a></strong><div class="details">ブックを開いたときに自動的にマクロVBAを実行するにはWorkbook_Openを使います。Workbook_Openは、ブックを開いた時に自動的に実行されるイベントです、ブックを開いたときに自動的にマクロVBAを起動する方法としてはAuto_Openもあります。</div>
<strong><a href="EXCELVBA235.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA235.html">ブックが閉じられる直前に保存済を確認（Workbook_BeforeClose）</a></strong><div class="details">Workbook_BeforeCloseは、ブックを閉じる直前に起動されるイベントです、手動で閉じる場合も、VBAで閉じる場合でも起動されます。ブックが未保存の場合、無条件でブックを保存する ブックが未保存の場合は、Closeをキャンセルする。</div>
<strong><a href="EXCELVBA236.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA236.html">シートが選択された時に指定セルに移動（Worksheet_Activate）</a></strong><div class="details">Worksheet_Activateは、シートが選択された時に実行されるイベントです、VBEの「MicrosoftExcelObjects」内の各シートに記述します。上記では、シートが選択されたとき、A1セルに移動しています。Application.GotoRange(&quot;A1&quot;),</div>
<strong><a href="EXCELVBA237.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA237.html">ダブルクリックで行高・列幅調整（Worksheet_BeforeDoubleClick）</a></strong><div class="details">セルをダブルクリックすることで、そのセル値で行高および列幅を自動調整するマクロVBAになります。これは、以下の操作をマクロVBAでまとめて行うことになります。「行の高さの自動調整」「列の幅の自動調整」この二つの操作を、マクロVBAで一度にやるということです。</div>
<strong><a href="EXCELVBA238.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA238.html">英小文字が入力されたら大文字に変換（Worksheet_Change）</a></strong><div class="details">セルに英小文字が入力されたら直ちに英大文字に変換するVBAです。ワークシートのイベントを使い、セルの入力確定と同時に変換します。Worksheet_Changeイベント セルの値が変更された時に起動されるイベントプロシージャーです。</div>
<strong><a href="EXCELVBA239.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA239.html">セル選択で選択行の色を変更（Worksheet_SelectionChange）</a></strong><div class="details">Worksheet_SelectionChangeは、セルの選択範囲を変更した時に起動されます。PrivateSubWorksheet_SelectionChange(ByValTargetAsRange) Target 選択されたセルが、Rangeオブジェクトとして渡されます。</div>
<strong><a href="EXCELVBA255.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA255.html">方眼紙Excel（神エクセル）に対応するVBA</a></strong><div class="details">もはや、「いじめ」か「いたずら」、方眼紙l（神）Exceに、1枠1文字を入れろと言われて… VBAで処理すれば、こんな「いじめ」も「いたずら」も、サクッと克服できます。以下のような、セル結合の鬼と化したExcelで、罫線で囲んだ枠内に、1枠1文字で入れるという苦行を、VBAなら自動で処理することができます。</div>
</div>
<div class="main-indent">
<div class="ads1">
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="5140526405"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div><h3>CSV・ADO：マクロVBAサンプル集</h3>
<div class="main-indent"><strong><a href="EXCELVBA270.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA270.html">VBAでのCSVの扱い方まとめ</a></strong><div class="details">マクロVBAでCSVの読み書きする方法はいくつもあり、当サイトでも複数のページでそれぞれVBAコードを掲載しています。順次記事を掲載しているので、それぞれどのような特徴があるかが良く分からなくなってしまっているようです。そこで、CSVに関するページをまとめておきました。</div>
<strong><a href="EXCEL111.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL111.html">CSVの読み込み方法</a></strong><div class="details">エクセルのVBAでのCSVの読込方法としては。・テキストファイルとして読み込む ・ワークブックとして読み込む ・クエリーテーブルを使う ・ADOを使う ・PowerQueryを使う 大別するとこのようになります。この記事を書いた当初は、エクセルのVBAでCSVの読み込みについてネットで検索したところ、</div>
<strong><a href="EXCEL119.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL119.html">CSVの読み込み方法（改）</a></strong><div class="details">実施したいこと ・ファイル名を指定し、形式をカンマ区切り、文字列で開く、その際、改行コードLF、CRLF、CRいずれにも対応、セル内の&quot;,&quot;や改行についてはカラムで区切らない。掲示板で上記のリクエストを頂きました。ということで、対応ロジックを書いてみました。</div>
<strong><a href="EXCELVBA257.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA257.html">CSVの読み込み方法（改の改）</a></strong><div class="details">CSVのVBAでの読込方法については複数の記事を掲載しており、人気記事として多くのアクセスがあります。掲載しているVBAコードは汎用的に書いてあり、ほぼそのまま使用できるものです。しかし、CSVは多くの形式（区切り文字、文字コード等）があり、今まで掲載したコードでは解決出来ないものがあります。</div>
<strong><a href="EXCELVBA268.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA268.html">CSVの読み込み方法（ジャグ配列）</a></strong><div class="details">CSVのマクロVBAでの読込方法についての記事は、人気記事として多くのアクセスがあります。当初作成して以来、ご要望をいただいたり自身で使っている中で、対応できないCSVが出てくるたびに改良を重ねています。今回のVBAは、一旦ジャグ配列を使用したCSV読み込み方法になります。</div>
<strong><a href="EXCEL120.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL120.html">CSVの出力（書き出し）方法</a></strong><div class="details">シート内容をCSV出力（書き出し）する方法です。CSVの読込は、VBAでのCSVの扱い方まとめ こちらを参照して下さい。以下では、2通りの方法を紹介します。エクセルの機能をそのまま利用します ※csv出力時日付がm/d/yyyyになってしまう場合の対処 日付がm/d/yyyyになってしまう場合に、yyyy/m/dにする場合には、</div>
<strong><a href="EXCEL220.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL220.html">UTF-8でCSVの読み書き（ADODB.Stream）</a></strong><div class="details">VBAでUTF-8を扱う為には、ADODB.Streamを使う必要があります。以下のコードを使用するには、参照設定で、「MicrosoftActiveXDataObjects2.8Library」にチェックを付けて下さい。または、DimadoStAsNewADODB.Stream ここを DimadoStAsObject SetadoSt=CreateO…</div>
<strong><a href="EXCEL114.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL114.html">ADOでマスタ付加と集計（SQL）</a></strong><div class="details">VBAでADOを使用し、マスターデータよりデータ付加します。ADOではSQL文が必要になりますが、ここではSQL文の詳細については説明を料略します。自身の他シートから、マスタ情報を付加し、さらに、集計をします。</div>
<strong><a href="EXCEL116.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL116.html">ADOでマスタ更新（SQL）</a></strong><div class="details">VBAでADOを使用し、マスターデータを更新します。ADOではSQL文が必要になりますが、ここではSQL文の詳細については説明を料略します。自身のブックの、他シートを更新します。シート「顧客マスタ」の、A列が顧客番号、B列が顧客名で、1行目が見出しになっているものとします。</div>
<strong><a href="EXCEL118.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL118.html">ADOでCSV読み込み（SQL）</a></strong><div class="details">VBAでADOを使用し、CSVデータを読み込みます。ADOではSQL文が必要になりますが、ここではSQL文の詳細については説明を省略します。ADO以外の方法については、「CSVの読み込み方法」を参考にして下さい。</div>
<strong><a href="EXCEL121.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL121.html">Excelファイルを開かずにシート名を取得</a></strong><div class="details">Excelファイルを開くときは、ファイルサイズに比して、とても遅い場合があります、ファイルを開かずに、Excelの情報を取得したいという要望は少なからずあるようです、そこで、処理の基本となるシート名を取得する方法になります。もちろん、開かないと言っても、厳密には必ず開いているわけですが、Excelのブックとして開かないという事です。</div>
<strong><a href="EXCEL122.html" tppabs="https://excel-ubara.com/excelvba5/EXCEL122.html">Excelファイルを開かずにシート名をチェック</a></strong><div class="details">多くのExcelファイルから、特定のシート名のデータを取得する場合、当該シートが存在していないブックがあるならば、ブックを開く前にシートの存在をチェックしたくなります。このような、ファイルを開かずにExcelの情報を取得したいという要望は多くあります。</div>
</div>
<h3>ちょっとしたアプリ：マクロVBAサンプル集</h3>
<div class="main-indent"><strong><a href="../excelvba6/index.htm" tppabs="https://excel-ubara.com/excelvba6/">エクセルでファイル一覧を作成</a></strong><div class="details">VBAでサブフォルダ以下も含めて全てのファイル一覧を取得します。最初はサブフォルダは無視して、VBAにある関数とステートメントだけで作成します、その後に、FileSystemObjectで再帰処理をすることで、全てのサブフォルダも取得するようにしていきます。</div>
<strong><a href="EXCELVBA227.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA227.html">アメブロの記事本文をVBAでバックアップする</a></strong><div class="details">後日追記 アメブロの仕様変更が度々あり、ここで紹介しているコードで取得できないものもあります、いつ仕様変更されるかわかりませんので、都度変更するのは結構大変です。あくまで、WEBページの取得技術方法として参考にしてください。アメブロにはバックアップ機能がありません。</div>
<strong><a href="EXCELVBA230.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA230.html">数独（ナンプレ）を解くVBAに挑戦</a></strong><div class="details">数独は、一般に「ナンバープレース（ナンプレ）」と呼ばれ、外国では「sudoku」と呼ばれているようです、この数独をExcelマクロVBAで解いてみようと言う事です。解き方は、とにかく片っ端から数字を当てはめていくという、なんとも芸の無い方法です。</div>
<strong><a href="EXCELVBA231.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA231.html">数独（ナンプレ）を解くアルゴリズムの要点とパフォーマンスの検証</a></strong><div class="details">数独（ナンプレ）を解くアルゴリズムを例に、アルゴリズムの要点と、それによるパフォーマンスを検証します、数独（ナンプレ）を解くVBAに挑戦 ここでは、とにかく全ての数字を当てはめていくという、いわば全数チェックでの解法を使いました。考察するまでもなく、かなりの無駄がある事は明白です。</div>
<strong><a href="EXCELVBA248.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA248.html">ナンバーリンク(パズル)を解くVBAに挑戦</a></strong><div class="details">ナンバーリンクというパズルがあります、これをエクセルVBAで解いてみようと思います、数独(ナンプレ)に続くパズルVBA解法の第二弾です。ナンバーリンクをご存じない方は、、ウィキペディア ナンバーリンクのおためし問題 このあたりをお読みください。</div>
<strong><a href="EXCELVBA249.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA249.html">ナンバーリンクを解くVBAのパフォーマンス改善</a></strong><div class="details">「ナンバーリンク(パズル)を解くVBAに挑戦」で作成したVBAでナンバーリンクを解く事には成功しました、しかし、10×10なら数分で解けるものの、10×18でやったところ、4時間半もかかってしまいました。12×12では、待ちきれずに途中で止めてしまいました。</div>
<strong><a href="EXCELVBA260.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA260.html">オセロを作りながらマクロVBAを学ぼう</a></strong><div class="details">ExcelマクロVBAでオセロ（リバーシ）を作っていきながら、マクロVBAを学んで行きましょう。目的は、マクロVBAの学習であり、思考を整理しVBAでプログラミングする学習です。従って、強いソフトを作ることが目的ではありませんので、最近流行のAIなんちゃら…なんていうのは考えるつもりはありません。</div>
<strong><a href="EXCELVBA265.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA265.html">他ブックへのリンクエラーを探す</a></strong><div class="details">リンクエラーが見つけられない… 「リンクの編集」で、「リンクの解除」を選択してもリンクが削除できない… こんな経験をした人は多いのではないでしょうか。エクセルをいろいろと操作していると、意図せずに参照先が別ブックになってしまい、かつ、その参照先のブックが無くなってしまっている… こんな場合に、リンクエラーとなります。</div>
<strong><a href="EXCELVBA266.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA266.html">Excelシートの複雑な計算式を解析するVBA</a></strong><div class="details">セルに入力されている数式が折り返されていて複数行（ときに3行以上）になっている場合、数式バーで見ていたのでは、どんな数式なのかがさっぱりわからなくなります。このような複雑な数式を分解し、分かり易く表示するVBAを作成しました。最初に言っておきますが、そもそも、そのような複雑な数式は作らないほうが良いというのが基本です。</div>
<strong><a href="EXCELVBA282.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA282.html">Excel将棋：マクロVBAの学習用</a></strong><div class="details">Excelで将棋を作ってみましょう。今やコンピューター将棋はプロをしのぐ強さです。しかし、Excelでそのようなソフトを作ろうと言うのではありません。と言いますか、残念ながら私には作れません、、、ExcelマクロVBAの学習素材として将棋を作ってみましょう。</div>
<strong><a href="EXCELVBA283.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA283.html">Excel囲碁：万波奈穂先生に捧ぐ</a></strong><div class="details">Excelで囲碁を作ってみます。AI搭載とかそんな大層なものではありません。人vs人で対戦できる程度、単純に黒白交互に打っていけるものです。ただし、・相手の石を囲んだら相手の石を取るのは自動にします。・着手禁止点には着手できないようにします。</div>
<strong><a href="EXCELVBA284.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA284.html">Excel囲碁：再起動後も続けて打てるように改造</a></strong><div class="details">Excelで囲碁を作ってみます。人vs人で対戦できる程度、単純に黒白交互に打っていけるものです。前作ではその場で打てればよいだけで作成しましたが、1日1ツイートで先生とフォロワーで対戦していくことになりました。</div>
<strong><a href="EXCELVBA285.html" tppabs="https://excel-ubara.com/excelvba5/EXCELVBA285.html">エクセルVBAで15パズルを作ってみた</a></strong><div class="details">古くからある15パズルをエクセルVBAで作ってみました。エクセルでこのパズルを遊んでも決して面白いものではないですね。このパズルそのものを使いたいという事はあまりないでしょう。あくまで、エクセルVBAでボタンをドラッグ移動するような場合に、VBAの参考にしてもらえればと思います。</div><br>
</div>

          
<HR>
<div class="ads1">
<center>
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- yama3 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="8239480723"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-format="autorelaxed"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="6847508570"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</center>
</div>
          <section>
          
          </section>
          <section id="new">
<br><h3><A name="new">新着記事<span class="newicon">NEW</span> </a>・・・<A href="../EXCELNEW.html" tppabs="https://excel-ubara.com/EXCELNEW.html">新着記事一覧を見る</A></h3><p><A href="../vba100/VBA100_100.html" tppabs="https://excel-ubara.com/vba100/VBA100_100.html">VBA100本ノック 100本目：WEBから100本ノックのリストを取得｜VBA練習問題</A>（3月3日）<br>
<A href="../vba100/VBA100_099.html" tppabs="https://excel-ubara.com/vba100/VBA100_099.html">VBA100本ノック 99本目：自動席替え（行列と前後左右が全て違うように）｜VBA練習問題</A>（3月2日）<br>
<A href="../vba100/VBA100_098.html" tppabs="https://excel-ubara.com/vba100/VBA100_098.html">VBA100本ノック 98本目：席替えルールが守られているか確認｜VBA練習問題</A>（3月1日）<br>
<A href="../vba100/VBA100_097.html" tppabs="https://excel-ubara.com/vba100/VBA100_097.html">VBA100本ノック 97本目：Accessデータを取得（グループ集計）｜VBA練習問題</A>（2月27日）<br>
<A href="../vba100/VBA100_096.html" tppabs="https://excel-ubara.com/vba100/VBA100_096.html">VBA100本ノック 96本目：Accessデータを取得（マスタ結合&amp;抽出）｜VBA練習問題</A>（2月26日）<br>
<A href="../vba100/VBA100_095.html" tppabs="https://excel-ubara.com/vba100/VBA100_095.html">VBA100本ノック 95本目：図形のテキストを検索するフォーム作成｜VBA練習問題</A>（2月24日）<br>
<A href="../vba100/VBA100_094.html" tppabs="https://excel-ubara.com/vba100/VBA100_094.html">VBA100本ノック 94本目：表範囲からHTMLのtableタグを作成｜VBA練習問題</A>（2月23日）<br>
<A href="../vba100/VBA100_093.html" tppabs="https://excel-ubara.com/vba100/VBA100_093.html">VBA100本ノック 93本目：複数ブックを連結して再分割｜VBA練習問題</A>（2月22日）<br>
<A href="../vba100/VBA100_092.html" tppabs="https://excel-ubara.com/vba100/VBA100_092.html">VBA100本ノック 92本目：セルの色を16進で返す関数｜VBA練習問題</A>（2月20日）<br>
<A href="../vba100/VBA100_091.html" tppabs="https://excel-ubara.com/vba100/VBA100_091.html">VBA100本ノック 91本目：時間計算（残業時間の月間合計）｜VBA練習問題</A>（2月19日）<br></p>

          </section>
          <section id="rank">
<br><h3><A name="rank">アクセスランキング </a>・・・ <A href="../EXCELRANK.html" tppabs="https://excel-ubara.com/EXCELRANK.html">ランキング一覧を見る</A></h3><p>1.<A href="../excelvba1/EXCELVBA318.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA318.html">最終行の取得（End,Rows.Count）｜VBA入門</A><br>2.<A href="../excelvba1/EXCELVBA311.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA311.html">RangeとCellsの使い方｜VBA入門</A><br>3.<A href="../excelvba1/EXCELVBA312.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA312.html">変数宣言のDimとデータ型｜VBA入門</A><br>4.<A href="../excelvba1/EXCELVBA301.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA301.html">マクロって何？VBAって何？｜VBA入門</A><br>5.<A href="../excelvba1/EXCELVBA310.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA310.html">Range以外の指定方法（Cells,Rows,Columns）｜VBA入門</A><br>6.<A href="../excelvba1/EXCELVBA341.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA341.html">セルのコピー&amp;値の貼り付け（PasteSpecial）｜VBA入門</A><br>7.<A href="../excelvba1/EXCELVBA316.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA316.html">繰り返し処理（For Next)｜VBA入門</A><br>8.<A href="../excelvba1/EXCELVBA308.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA308.html">セルに文字を入れるとは（Range,Value）｜VBA入門</A><br>9.<A href="../excelvba1/EXCELVBA304.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA304.html">マクロはどこに書くの（VBEの起動）｜VBA入門</A><br>10.<A href="../excelvba1/EXCELVBA306.html" tppabs="https://excel-ubara.com/excelvba1/EXCELVBA306.html">とにかく書いてみよう（Sub,End Sub）｜VBA入門</A><br></p>
          </section>
<br>
          <HR>
          <div><ul>
<li><a href="../index.htm" tppabs="https://excel-ubara.com/">ホーム</a></li>
<li><a href="../excel_vba2.html" tppabs="https://excel-ubara.com/excel_vba2.html">マクロVBA応用編</a></li>
<li><span class="strrev2"><strong>VBAサンプル集：そのまま使える実用マクロ集</strong></span></li>
</ul></div><br>
          <strong>このサイトがお役に立ちましたら「シェア」「Bookmark」をお願いいたします。</strong><br>
          <div class="ninja_onebutton">
            <script type="text/javascript">
              //<![CDATA[
              (function(d){
              if(typeof(window.NINJA_CO_JP_ONETAG_BUTTON_dbb4ddbe09aac6bed0b2564afb27c6f2)=='undefined'){
                  document.write("<sc"+"ript type='text\/javascript' src='\/\/omt.shinobi.jp\/b\/dbb4ddbe09aac6bed0b2564afb27c6f2'><\/sc"+"ript>");
              }else{
                  window.NINJA_CO_JP_ONETAG_BUTTON_dbb4ddbe09aac6bed0b2564afb27c6f2.ONETAGButton_Load();}
              })(document);
              //]]>
            </script><span class="ninja_onebutton_hidden" style="display:none;"></span><span style="display:none;" class="ninja_onebutton_hidden"></span>
          </div>
<br>
          <script>
            (function() {
              var cx = 'partner-pub-6511020045004282:1071452572';
              var gcse = document.createElement('script');
              gcse.type = 'text/javascript';
              gcse.async = true;
              gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
              var s = document.getElementsByTagName('script')[0];
              s.parentNode.insertBefore(gcse, s);
            })();
          </script>
          <gcse:searchbox-only></gcse:searchbox-only>
<br>
          記述には細心の注意をしたつもりですが、<br>
          間違いやご指摘がありましたら、<A href="../query.html" tppabs="https://excel-ubara.com/query.html" target="_blank">「お問い合わせ」</A>からお知らせいただけると幸いです。<br>
          掲載のVBAコードは動作を保証するものではなく、あくまでVBA学習のサンプルとして掲載しています。<br>
          掲載のVBAコードは自己責任でご使用ください。万一データ破損等の損害が発生しても責任は負いません。
        </section>
      </div> <!--/#main-->

      <div id="sub">
        <nav>
          <h2>エクセル全般</h2>
          <ul class="submenu">
            <li><A href="../excel1/index.htm" tppabs="https://excel-ubara.com/excel1/">エクセル入門</A></li>
            <li><A href="../excel2/index.htm" tppabs="https://excel-ubara.com/excel2/">エクセル基本操作</A></li>
            <li><A href="../excel3/index.htm" tppabs="https://excel-ubara.com/excel3/">エクセル関数応用</A></li>
            <li><A href="../excel4/index.htm" tppabs="https://excel-ubara.com/excel4/">エクセル挑戦問題</A></li>
            <li><A href="../EXCEL/excel_reference.html" tppabs="https://excel-ubara.com/EXCEL/excel_reference.html">Excelリファレンス</A></li>
            <li><A href="../excel5/index.htm" tppabs="https://excel-ubara.com/excel5/">エクセル雑感</A></li>
          </ul>
          <h2>マクロVBA入門編</h2>
          <ul class="submenu">
            <li><A href="../excelvba1/index.htm" tppabs="https://excel-ubara.com/excelvba1/">マクロVBA入門</A></li>
            <li><A href="../excelvba1r/index.htm" tppabs="https://excel-ubara.com/excelvba1r/">マクロVBA再入門</A></li>
            <li><A href="../excelvba2/index.htm" tppabs="https://excel-ubara.com/excelvba2/">マクロ記録でVBA</A></li>
            <li><A href="../excelvba9/index.htm" tppabs="https://excel-ubara.com/excelvba9/">マクロVBA練習問題</A></li>
            <li><A href="../MOS_VBA/index.htm" tppabs="https://excel-ubara.com/MOS_VBA/">VBAエキスパート対策</A></li>
            <li><A href="../excelvba8/index.htm" tppabs="https://excel-ubara.com/excelvba8/">マクロVBA関数</A></li>
            <li><A href="../vba100/index.htm" tppabs="https://excel-ubara.com/vba100/">VBA100本ノック</A></li>
          </ul>
          <h2>マクロVBA応用編</h2>
          <ul class="submenu">
            <li><A href="../excelvba3/index.htm" tppabs="https://excel-ubara.com/excelvba3/">ユーザーフォーム入門</A></li>
            <li><A href="../vba_class/index.htm" tppabs="https://excel-ubara.com/vba_class/">VBAクラス入門</A></li>
            <li><A href="index.htm" tppabs="https://excel-ubara.com/excelvba5/">マクロVBAサンプル集</A></li>
            <li><A href="../excelvba4/index.htm" tppabs="https://excel-ubara.com/excelvba4/">マクロVBA技術解説</A></li>
            <li><A href="../excelvba7/index.htm" tppabs="https://excel-ubara.com/excelvba7/">エクセル顧客管理</A></li>
            <li><A href="../EXCEL/vba_reference.html" tppabs="https://excel-ubara.com/EXCEL/vba_reference.html">VBAリファレンス</A></li>
          </ul>
          <h2>その他（Excel以外）</h2>
          <ul class="submenu">
            <li><a href="../vba_sql/index.htm" tppabs="https://excel-ubara.com/vba_sql/">SQL入門</a></li>
            <li><A href="../spreadsheet1/index.htm" tppabs="https://excel-ubara.com/spreadsheet1/">スプレッドシート入門</A></li>
            <li><A href="../apps_script1/index.htm" tppabs="https://excel-ubara.com/apps_script1/">GAS入門</A></li>
            <li><A href="../python/index.htm" tppabs="https://excel-ubara.com/python/">Python入門</A></li>
          </ul>
          <h2>サイト案内</h2>
          <ul class="submenu">
            <li><A href="../EXCELNEW.html" tppabs="https://excel-ubara.com/EXCELNEW.html">新着記事一覧</A></li>
            <li><A href="../EXCELRANK.html" tppabs="https://excel-ubara.com/EXCELRANK.html">アクセスランキング</A></li>
            <li><A href="../sitemap.html" tppabs="https://excel-ubara.com/sitemap.html">サイトマップ</A></li>
            <li><a href="../business/index.htm" tppabs="https://excel-ubara.com/business/">事業案内</a></li>
            <li><A href="../query.html" tppabs="https://excel-ubara.com/query.html">お問い合わせ&nbsp&nbsp</A></li>
          </ul>
        </nav>

        <section>
          
<HR>
<div class="ads1">
<CENTER>
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- yama22 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="9686142173"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</CENTER>
</div>
          

          

          <HR>
          <div><ul>
<li><a href="../index.htm" tppabs="https://excel-ubara.com/">ホーム</a></li>
<li><a href="../excel_vba2.html" tppabs="https://excel-ubara.com/excel_vba2.html">マクロVBA応用編</a></li>
<li><span class="strrev2"><strong>VBAサンプル集：そのまま使える実用マクロ集</strong></span></li>
</ul></div><br>
          このサイトがお役に立ちましたら「シェア」「Bookmark」をお願いいたします。<br>

          <div class="ninja_onebutton">
            <script type="text/javascript">
              //<![CDATA[
              (function(d){
              if(typeof(window.NINJA_CO_JP_ONETAG_BUTTON_dbb4ddbe09aac6bed0b2564afb27c6f2)=='undefined'){
                  document.write("<sc"+"ript type='text\/javascript' src='\/\/omt.shinobi.jp\/b\/dbb4ddbe09aac6bed0b2564afb27c6f2'><\/sc"+"ript>");
              }else{
                  window.NINJA_CO_JP_ONETAG_BUTTON_dbb4ddbe09aac6bed0b2564afb27c6f2.ONETAGButton_Load();}
              })(document);
              //]]>
            </script><span class="ninja_onebutton_hidden" style="display:none;"></span><span style="display:none;" class="ninja_onebutton_hidden"></span>
          </div>
          本文下部へ<br>
          <div class="main-indent">
            <strong><A href="#same">同じテーマの記事</A></strong><br>
            <strong><A href="#new">新着記事</A></strong><br>
            <strong><A href="#rank">アクセスランク</A></strong><br>
          </div>
          <div class="ads2">
            <script>
              (function() {
                var cx = 'partner-pub-6511020045004282:1071452572';
                var gcse = document.createElement('script');
                gcse.type = 'text/javascript';
                gcse.async = true;
                gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(gcse, s);
              })();
            </script>
            <gcse:searchbox-only></gcse:searchbox-only>
          </div>
          
          

          
<HR>
<div class="ads2">
<script async src="../../pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" tppabs="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 新サイド下 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-6511020045004282"
     data-ad-slot="1968934163"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div><br>
        </section>
      </div> <!--/#sub-->
    </div> <!--/#contents-in-->
  </div> <!--/#contents-->

  <footer>
    <div id="footermenu" class="inner">
      <ul>
        <li><a href="../excel_index.html" tppabs="https://excel-ubara.com/excel_index.html">■Excel全般</a></li>
        <li><A href="../excel1/index.htm" tppabs="https://excel-ubara.com/excel1/">エクセル入門</A></li>
        <li><A href="../excel2/index.htm" tppabs="https://excel-ubara.com/excel2/">エクセル基本操作</A></li>
        <li><A href="../excel3/index.htm" tppabs="https://excel-ubara.com/excel3/">エクセル関数応用</A></li>
        <li><A href="../excel4/index.htm" tppabs="https://excel-ubara.com/excel4/">エクセル挑戦問題</A></li>
        <li><A href="../EXCEL/excel_reference.html" tppabs="https://excel-ubara.com/EXCEL/excel_reference.html">Excelリファレンス</A></li>
        <li><A href="../excel5/index.htm" tppabs="https://excel-ubara.com/excel5/">エクセル雑感</A></li>
      </ul>
      <ul>
        <li><a href="../excel_vba1.html" tppabs="https://excel-ubara.com/excel_vba1.html">■マクロVBA入門編</a></li>
        <li><A href="../excelvba1/index.htm" tppabs="https://excel-ubara.com/excelvba1/">マクロVBA入門</A></li>
        <li><A href="../excelvba1r/index.htm" tppabs="https://excel-ubara.com/excelvba1r/">マクロVBA再入門</A></li>
        <li><A href="../excelvba2/index.htm" tppabs="https://excel-ubara.com/excelvba2/">マクロ記録でVBA</A></li>
        <li><A href="../excelvba9/index.htm" tppabs="https://excel-ubara.com/excelvba9/">マクロVBA練習問題</A></li>
        <li><A href="../MOS_VBA/index.htm" tppabs="https://excel-ubara.com/MOS_VBA/">VBAエキスパート対策</A></li>
        <li><A href="../excelvba8/index.htm" tppabs="https://excel-ubara.com/excelvba8/">マクロVBA関数</A></li>
        <li><A href="../vba100/index.htm" tppabs="https://excel-ubara.com/vba100/">VBA100本ノック</A></li>
      </ul>
      <ul>
        <li><a href="../excel_vba2.html" tppabs="https://excel-ubara.com/excel_vba2.html">■マクロVBA応用編</a></li>
        <li><A href="../excelvba3/index.htm" tppabs="https://excel-ubara.com/excelvba3/">ユーザーフォーム入門</A></li>
        <li><A href="../vba_class/index.htm" tppabs="https://excel-ubara.com/vba_class/">VBAクラス入門</A></li>
        <li><A href="index.htm" tppabs="https://excel-ubara.com/excelvba5/">マクロVBAサンプル集</A></li>
        <li><A href="../excelvba4/index.htm" tppabs="https://excel-ubara.com/excelvba4/">マクロVBA技術解説</A></li>
        <li><A href="../excelvba7/index.htm" tppabs="https://excel-ubara.com/excelvba7/">エクセル顧客管理</A></li>
        <li><A href="../EXCEL/vba_reference.html" tppabs="https://excel-ubara.com/EXCEL/vba_reference.html">VBAリファレンス</A></li>
      </ul>
      <ul>
        <li><A href="../python/index.htm" tppabs="https://excel-ubara.com/python/">■Python入門</A></li>
        <li><a href="../vba_sql/index.htm" tppabs="https://excel-ubara.com/vba_sql/">■SQL入門</a></li>
        <li><A href="../spreadsheet1/index.htm" tppabs="https://excel-ubara.com/spreadsheet1/">■スプレッドシート入門</A></li>
        <li><A href="../apps_script1/index.htm" tppabs="https://excel-ubara.com/apps_script1/">■Google Apps Script入門</A></li>
        <li><A href="../excel_course/index.htm" tppabs="https://excel-ubara.com/excel_course/">■エクセル講座セミナー</A></li>
        <li><A href="../business/index.htm" tppabs="https://excel-ubara.com/business/">■事業案内</A></li>
        <li><A href="../business/sitemap.html" tppabs="https://excel-ubara.com/business/sitemap.html">■サイトマップ</A></li>
      </ul>
    </div> <!--/footermenu-->
    <div id="copyright">
      <small>エクセルの神髄 ｜ Copyright&copy; 2010 <A href="../index.htm" tppabs="https://excel-ubara.com/">鵜原パソコンソフト研究所</A></small>
    </div>
  </footer>

  <p class="nav-fix-pos-pagetop"><a href="#">↑</a></p>

  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-37178461-1']);
    _gaq.push(['_trackPageview']);
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
<!--License20150309TPg-->
</body>
</html>
