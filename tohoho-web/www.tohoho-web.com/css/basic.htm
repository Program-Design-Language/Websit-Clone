<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>CSSリファレンス(CSS入門) - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" type="text/css" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>

<h2>SSリファレンス(CSS入門)</h2>
<a href="../www.htm" tppabs="http://www.tohoho-web.com/www.htm">トップ</a> &gt;
<a href="index.htm" tppabs="http://www.tohoho-web.com/css/index.htm">CSSリファレンス</a> &gt;
CSS入門

<h4 id="Mokuji">目次</h4>
<ul>
<li><a href="#About">CSSとは？</a></li>
<li><a href="#Sample">CSSの例</a></li>
<li><a href="#HowToUse">CSSの指定方法</a></li>
<li><a href="#TagElementSelector">タグと要素とセレクタ</a></li>
<li><a href="#Inheritance">継承</a></li>
<li><a href="#Selector">セレクタ</a></li>
<li><a href="#Comment">コメント</a></li>
<li><a href="#Priority">優先度の順位</a></li>
<li><a href="#Unit">長さの単位</a></li>
<li><a href="#Merit">CSSのメリット</a></li>
</ul>

<h4 id="About">CSSとは？</h4>
<div class="i">
<p>CSS は Cascading Style Sheets の略です。CSSは、HTMLで記述された Webページの見栄え・スタイルを効率的に定義するための技術です。HTMLで文書の意味を定義し、CSSで見栄えを定義することにより、意味と見栄えを分離することが可能となります。</p>
</div>

<h4 id="Sample">CSSの例</h4>
<div class="i">
<p>最も基本的なCSSの使用例を下記に示します。この例では、&lt;h1&gt;～&lt;/h1&gt; で囲まれたタイトル部が赤字で表示されます。「h1 { color: red; }」は、「h1 の部分の色(color)を赤(red)にする」という意味を持ちます。この例の「色」のような見栄えなどの情報を「スタイル」と呼びます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
    &lt;title&gt;CSSのテスト&lt;/title&gt;
    <em>&lt;style type="text/css"&gt;</em>
    <em>&lt;!--</em>
    <em>h1 { color: red; }</em>
    <em>--&gt;</em>
    <em>&lt;/style&gt;</em>
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;CSSとは&lt;/h1&gt;
    &lt;p&gt;CSSはCascading Style Sheetsの略で・・・&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
</div>

<h4 id="HowToUse">CSSの指定方法</h4>
<div class="i">
<p>CSSの指定方法には下記のようなものがあります。</p>
</div>
<h5 id="TegStyle">◆ style属性で指定する方法</h5>
<div class="i">
<p>h1 や div や span や p など、大半のタグに style属性を用いて指定することができます。下記の例では、&lt;h1&gt;～&lt;/h1&gt; で囲まれた「CSSとは」の文字が赤字で表示されます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;h1 <em>style="color:red;"</em>&gt;CSSとは&lt;/h1&gt;
</pre>
<p>セミコロン( ; )で区切って、複数のスタイルを指定することも可能です。最後のスタイルのセミコロン( ; )は省略可能です。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;h1 <em>style="color:red; font-size: 24pt;"</em>&gt;CSSとは&lt;/h1&gt;
</pre>
</div>
<h5 id="StyleTag">◆ &lt;style&gt;～&lt;/style&gt;で指定する方法</h5>
<div class="i">
<p>&lt;style&gt;～&lt;/style&gt; で、文書全体のスタイルを指定することができます。下記の例では、文書中のすべての &lt;h1&gt;～&lt;/h1&gt; が赤字で表示されます。&lt;!-- ～ --&gt; でコメントアウトしているのは、CSS未対応ブラウザへの配慮です。JavaScript とは異なり、--&gt; の前に // を記述してはなりません。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
    &lt;title&gt;CSSのテスト&lt;/title&gt;
    <em>&lt;style type="text/css"&gt;</em>
    <em>&lt;!--</em>
    <em>h1 { color: red; }</em>
    <em>--&gt;</em>
    <em>&lt;/style&gt;</em>
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;CSSとは&lt;/h1&gt;
    &lt;p&gt;CSSはCascading Style Sheetsの略で・・・&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
</div>
<h5 id="LinkStyle">◆ &lt;link&gt;を用いた外部CSSファイルで指定する方法</h5>
<div class="i">
<p>&lt;link&gt; タグにより、外部CSSファイルを読み込むことができます。外部CSSファイルを用いることで、複数の HTML文書で共通のCSSを共有することができます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
    <em>&lt;link rel="stylesheet" type="text/css" href="style.css"&gt;</em>
    &lt;title&gt;CSSのテスト&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;CSSとは&lt;/h1&gt;
    &lt;p&gt;CSSはCascading Style Sheetsの略で・・・&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>外部CSSファイル(style.css)には、次のように記述しておきます。ファイル名は何でもよいですが、拡張子は通常 .css とします。</p>
<div class="tab">CSS</div>
<pre class=c2>
<em>h1 { color: red; }</em>
</pre>
</div>
<h5 id="ImportStle">◆ @importを用いた外部CSSファイルで指定する方法</h5>
<div class="i">
<p>下記の様に @import を用いて外部CSSファイルを読み込むことも可能です。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;style type="text/css"&gt;
<em>@import url(style.css);</em>
&lt;/style&gt;
</pre>
<p>CSS2 では下記のような記法もサポートされました。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;style type="text/css"&gt;
<em>@import "style.css";</em>
&lt;/style&gt;
</pre>
</div>

<h4 id="TagElementSelector">タグと要素とセレクタ</h4>
<div class="i">
<p>CSS の基本動作は「○○要素の、○○というスタイルを、○○にする。」となります。例えば上記の例では、「h1要素の、色(color)スタイルを、赤(red)にする」となります。各用語の使い方を下記に示します。</p>
<ul>
<li>&lt;h1&gt;～&lt;/h1&gt; で囲まれた部分を h1要素(element)
<li>&lt;h1&gt;～&lt;/h1&gt; の ～ の部分を h1要素のコンテンツ(content)
<li>&lt;h1&gt;～&lt;/h1&gt; の &lt;h1&gt; の部分を h1要素の開始タグ(start tag)
<li>&lt;h1&gt;～&lt;/h1&gt; の &lt;/h1&gt; の部分を h1要素の終了タグ(end tag)
<li>h1 { color: red; } の h1 の部分をセレクタ(selector)
<li>h1 { color: red; } の color:red; の部分を宣言(declaration)
<li>h1 { color: red; } の color の部分を属性(property)
<li>h1 { color: red; } の red の部分を値(value)
</ul>
<p>下の図のそれぞれの枠が要素(element)となります。html要素の中に head要素と body要素が、body要素の中に h1要素と p要素があるように、要素は親子関係を持ちます。</p>
<table class="tb0" style="width:300px; background-color:#f0f0f0; border-collapse:collapse;">
 <tr>
  <td>
   &lt;html&gt;
    <table class="tb0" style="width:260px; margin:auto; border-collapse:collapse;">
     <tr>
      <td>
       &lt;head&gt;
        <table class="tb0" style="width:220px; margin:auto; border-collapse:collapse;">
         <tr><td>&lt;title&gt;～&lt;/title&gt;</td></tr>
        </table>
       &lt;/head&gt;
      </td>
     </tr>
    </table>
   <br>
    <table class="tb0" style="width:260px; margin:auto; border-collapse:collapse;">
     <tr>
      <td>
       &lt;body&gt;
        <table class="tb0" style="width:220px; margin:auto; border-collapse:collapse;">
         <tr><td>&lt;h1&gt;～&lt;/h1&gt;</td></tr>
        </table>
        <table class="tb0" style="width:220px; margin:auto; border-collapse:collapse; margin-top:5px;">
         <tr><td>&lt;p&gt;～&lt;/p&gt;</td></tr>
        </table>
       &lt;/body&gt;
      </td>
     </tr>
    </table>
   &lt;/html&gt;
  </td>
 </tr>
</table>
</div>

<h4 id="Inheritance">継承</h4>
<div class="i">
<p>親要素に指定されたスタイルの多くは、子要素に継承されます。例えば、h1 { color: red; } と定義されている時、親要素である h1要素の color属性は、子要素である em要素に継承され、「いいい」の部分も赤くなります。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;h1&gt;あああ<em>&lt;em&gt;いいい&lt;/em&gt;</em>ううう&lt;/h1&gt;
</pre>
<p>CSS2 では、大半のスタイルで、親のスタイルを継承することを意味する inherit という値がサポートされました。通常では継承されないスタイルを継承させたり、継承することを明示的に示したい場合、に使用されます。IE8、Firefox 2.0、Opera 9 などでサポートされています。例えば下記の例では、リンクテキストを親要素と同じ色で表示します。</p>
<div class="tab">CSS</div>
<pre class=c2>
a { color: <em>inherit</em>; }
</pre>
</div>

<h4 id="Selector">セレクタ</h4>
<div class="i">
<p>セレクタには、スタイルを適用する対象となる要素を指定します。要素の指定は様々な方法があります。</p>
<div class="tab">CSS</div>
<pre class=c2>
h1 { color: red; }			/* h1要素に対して指定 */
h1, h2 { color: red; }			/* h1 と h2要素に対して指定 */
ul li { color: red; }			/* &lt;ul&gt;～&lt;/ul&gt; の中にある li要素に対して指定 */
.sample { color: red; }			/* class="sample" を持つ要素に対して指定 */
#sample { color: red; }			/* id="sample" を持つ要素に対して指定 */
h1.sample { color: red; }		/* class="sample" を持つ div要素に対して指定 */
a:link { color: red; }			/* &lt;a href="..."&gt; のリンク(未訪問)に対して指定 */
</pre>
<p>詳細は「<a href="selector.htm" tppabs="http://www.tohoho-web.com/css/selector.htm">セレクタ</a>」を参照してください。</p>
</div>

<h4 id="Comment">コメント</h4>
<div class="i">
<p>/* と */ の間はコメントとして無視されます。</p>
<div class="tab">CSS</div>
<pre class=c2>
h1 { color:red; }    <em>/* Red Color */</em>
</pre>
<p>コメントを入れ子にすることはできません。下記は、誤ったコメントの使用例です。</p>
<div class="tab">CSS</div>
<pre class=c2>
<em>/*</em> h1 { color:red; }    <em>/* Red Color */    */</em>
</pre>
</div>

<h4 id="Priority">優先度の順位</h4>
<div class="i">
<p>ひとつの要素に相反するスタイルが指定された場合、下記の計算で求められたポイントの高いものが優先されます。</p>
<table class="tb1">
<tr><th>説明</th><th>例</th><th>ポイント</th></tr>
<tr><td><a href="rule/important.htm" tppabs="http://www.tohoho-web.com/css/rule/important.htm">!important</a></td><td>!important</td><td>10000点</td></tr>
<tr><td>style 属性</td><td>style="..."</td><td>1000点</td></tr>
<tr><td>ID セレクタ</td><td>#xyz</td><td>100点</td></tr>
<tr><td>クラスセレクタ</td><td>.xyz</td><td>10点</td></tr>
<tr><td>擬似クラス</td><td>[href^="http:"]</td><td>10点</td></tr>
<tr><td>要素名</td><td>ul</td><td>1点</td></tr>
<tr><td>擬似要素</td><td>:first-child</td><td>1点</td></tr>
</table>
<p>セレクタの中に複数個出現した場合は、複数カウントします。例えば、下記の様に計算されます。</p>
<div class="tab">CSS</div>
<pre class=c2>
* { ... }                  /* 0点 */
ul { ... }                 /* 1点 (要素×1個)*/
ul li { ... }              /* 2点 (要素×2個) */
li:first-child { ... }     /* 2点 (要素＋擬似要素) */
.xyz { ... }               /* 10点 (クラス) */
a[href^="http://"] { ... } /* 11点 (要素＋擬似クラス) */
#xyz { ... }               /* 100点 (IDセレクタ) */
style="..."                /* 1000点 (stype属性) */
#xyz { ... !important }    /* 10100点 (!impotant＋IDセレクタ) */
</pre>
<p>同じ優先度のスタイルが存在する場合は、CSS 定義で後から定義されたものが優先されます。例えば下記の例では、class="c2 c1" の並びではなく、.c1 と .c2 で、後から定義されたものが優先されます。</p>
<div class="tab">CSS</div>
<pre class=c2>
&lt;style&gt;
.c1 { color: red; }
.c2 { color: blue; }
&lt;/style&gt;
&lt;h1 class="c2 c1"&gt;青文字になります&lt;/h1&gt;
&lt;h1 class="c1 c2"&gt;青文字になります&lt;/h1&gt;
</pre>
</div>

<h4 id="Unit">長さの単位</h4>
<div class="i">
<p>HTML の height=100 や width=100 は単位を書きませんが、CSS では数値が 0 の時を除いて単位は必須です。長さの単位に関する詳細は <a href="value/length.htm" tppabs="http://www.tohoho-web.com/css/value/length.htm"><i>&lt;length&gt;</i></a> を参照してください。</p>
</div>

<h4 id="Merit">CSSのメリット</h4>
<div class="i">
<p>CSSを使用することのメリットには次のようなものがあります。</p>
</div>
<h5>◆ 見栄えを一度に指定できる</h5>
<div class="i">
<p>すべての H1要素に &lt;font&gt;～&lt;/font&gt; を指定してまわるよりも、CSSで一度に指定した方が楽になります。外部ファイルで指定しておけば、より一層楽になります。</p>
<p>また、見栄えを外部ファイルに定義しておけば、それをちょっと変更するだけで見栄えを一度に変更することができます。春には春のスタイルを、秋には秋のスタイルを適用してやることもできます。この時、class=red のようなクラス名だと、.red { color:blue; } などと変更した時に妙な気分になるので、class=pastoral のような、見栄えに影響しない名前をつけておくとよいそうです。</p>
</div>
<h5>◆ 見栄えと意味を分離できる</h5>
<div class="i">
<p>Webページを自動収集して情報データベースを作成したり、目の見えない人が音声ブラウザでWebページを読む場合など、見栄えがあまり重要視されないケースもあります。見栄えを別のページで記述することにより、不要な見栄え情報を読み込んでくる煩わしさを解消することができます。</p>
</div>

<hr>
<div>Copyright (C) 1997-2012 杜甫々</div>
<div>初版：1997年7月27日、最終更新：2012年5月6日</div>
<div>http://www.tohoho-web.com/css/basic.htm</div>
</body>
</html>
