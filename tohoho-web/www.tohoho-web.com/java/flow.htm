<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのJava入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>
<h2>制御構文</h2>

<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<a href="syntax.htm" tppabs="http://www.tohoho-web.com/java/syntax.htm">[前に]</a>
<a href="modifier.htm" tppabs="http://www.tohoho-web.com/java/modifier.htm">[次に]</a>

<h4 id="if">もし（if）</h4>
<div class=i>
<p><b>if</b> 文は、「もし・・・なら」という制御を実現します。次の例では、もし a の値が 3 であれば、"a is 3." を表示します。</p>
<div class="tab">Java</div>
<pre class=c2>
int a = 3;
<em>if (a == 3)</em> {
    System.out.println("a is 3.");
}
</pre>
<p><b>else</b> は、「さもなくば」を意味します。次の例では、もし a の値が 3 であれば "a is 3." を、さもなくば "a is not 3." を表示します。</p>
<div class="tab">Java</div>
<pre class=c2>
int a = 3;
if (a == 3) {
    System.out.println("a is 3.");
} <em>else</em> {
    System.out.println("a is not 3.");
}
</pre>
<p>else if を繰り返して使用することもできます。次の例では、もし a が 3 であれば "a is 3." を、a が 4 であれば "a is 4." を、さもなくば "a is unknown." を表示します。</p>
<div class="tab">Java</div>
<pre class=c2>
int a = 3;
if (a == 3) {
    System.out.println("a is 3.");
} <em>else if (a == 4)</em> {
    System.out.println("a is 4.");
} else {
    System.out.println("a is unknown.");
}
</pre>
</div>

<h4 id="for">繰り返し（for）</h4>
<div class=i>
<p><b>for</b> 文は処理を繰り返して実行する場合に用います。下記の例は、println() を 10回繰り返す例です。最初に i に 0 を代入し、i の値を ++ でインクリメントしながら、i の値が 10 よりも小さい間、System.out.println(i) の実行を繰り返します。</p>
<div class="tab">Java</div>
<pre class=c2>
int i;
<em>for (i = 0; i &lt; 10; i++)</em> {
    System.out.println(i);
}
</pre>
</div>

<h4 id="while">繰り返し（while）</h4>
<div class=i>
<p><b>while</b> 文は、条件が真である間、処理を繰り返します。下記の例では、i の値が 10 よりも小さい間、println() の実行を繰り返します。</p>
<div class="tab">Java</div>
<pre class=c2>
int i = 0;
<em>while (i &lt; 10)</em> {
    System.out.println(i);
    i++;
}
</pre>
</div>

<h4 id="dowhile">繰り返し（do while）</h4>
<div class=i>
<p><b>do while</b> 文は、<a href="#while">while</a> 文と似ていますが、条件が偽でも最低 1回は処理を実行する点がことなります。</p>
<div class="tab">Java</div>
<pre class=c2>
int i = 0;
<em>do</em> {
    System.out.println(i);
    i++;
} <em>while (i &lt; 10);</em>
</pre>
</div>

<h4 id="switch">分岐（switch）</h4>
<div class=i>
<p><b>switch</b> 文は、条件で指定した値に応じて処理を振り分けます。条件には数値のみを指定することができます。<b>case</b> 文の値には固定値を指定します。実行時に値の変わる変数を指定することはできません。<b>default</b> は、他のどの条件にもマッチしなかった場合に実行されます。</p>
<div class="tab">Java</div>
<pre class=c2>
int n = 3;
<em>switch (n)</em> {
<em>case 1:</em>
    System.out.println("n is one.");
    break;
<em>case 2:</em>
    System.out.println("n is two.");
    break;
<em>case 3:</em>
    System.out.println("n is tree.");
    break;
<em>default:</em>
    System.out.println("unknwon");
    break;
}
</pre>
</div>

<h4 id="break">処理を抜ける（break）</h4>
<div class=i>
<p><b>break</b> は、最も内側の for ループ、while ループ、do ループや、case 文の残りの処理を飛ばし、処理を抜けます。Perl言語の last文に相当します。下記の例では、i の値が 5 の時に for ループを抜け出し、finish!! を書き出します。</p>
<div class="tab">Java</div>
<pre class=c2>
for (i = 0; i &lt; 10; i++) {
    if (i == 5) {
        <em>break;</em>
    }
    System.out.println(i);
}
System.out.println("finish!!");
</pre>
<p>ラベルを指定することにより、多重のループを一度に抜け出すこともできます。下記の例では、i == 1、j == 5 の時に、loop1 のラベルで指定した外側の for ループを抜けます。ラベルには任意の名前をつけることができます。</p>
<div class="tab">Java</div>
<pre class=c2>
<em>loop1:</em>
    for (i = 0; i &lt; 10; i++) {
        for (j = 0; j &lt; 10; j++) {
            if ((i == 1) &amp;&amp; (j == 5)) {
                <em>break loop1;</em>
            }
        }
    }
</pre>
</div>

<h4 id="continue">処理を繰り返す（continue）</h4>
<div class=i>
<p><b>continue</b> は、最も内側の for ループ、while ループ、do ループ文の残りの処理を飛ばし、次のループを開始します。Perl言語の next文に相当します。下記の例では、i の値が 5 の時に println() の実行をスキップし、i が 6 のループに移ります。</p>
<div class="tab">Java</div>
<pre class=c2>
for (i = 0; i &lt; 10; i++) {
    if (i == 5) {
        <em>continue;</em>
    }
    System.out.println(i);
}
</pre>
<p>break と同様に、ラベルで指定した多重ループの外側のループに作用させることも可能です。</p>
</div>

<h4 id="goto">ジャンプ（goto）</h4>
<div class=i>
<p>Java では <b>goto</b> 文はキーワードとして定義されていますが、サポートされていません。</p>
</div>

<hr>
<div>Copyright (C) 2004 杜甫々</div>
<div>http://www.tohoho-web.com/java/flow.htm</div>
<div>初版：2004年6月26日、最終更新：2004年6月26日</div>
<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<a href="syntax.htm" tppabs="http://www.tohoho-web.com/java/syntax.htm">[前に]</a>
<a href="modifier.htm" tppabs="http://www.tohoho-web.com/java/modifier.htm">[次に]</a>
</body>
</html>
