<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのJava入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>
<h2>Javaとは</h2>

<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<span style="gray">[前に]</span>
<a href="start.htm" tppabs="http://www.tohoho-web.com/java/start.htm">[次に]</a>

<h4 id="About">Javaとは</h4>
<h5>◆ Sun が開発したプログラミング言語</h5>
<div class=i>
<p><b>Java</b> は、1995年頃に <b>Sun Microsystems</b> 社によって発表されたプログラミング言語です。プログラミング言語には他に BASIC、COBOL、FORTLAN、LISP、C、C++、JavaScript、Perl、PHP、Ruby などがあります。</p>
</div>
<h5>◆ Java の語源</h5>
<div class=i>
<p>Java の語源はコーヒーの Java（ジャワ）です。ただし、プログラミング言語の時は「ジャバ」と表記することが多いようです。英語の発音は「ジャヴァ」。何故、コーヒーの名前になったかには諸説あり、本当の理由は謎につつまれています。</p>
</div>
<h5>◆ JavaScript とは別物</h5>
<div class=i>
<p>Java と JavaScript は名前も文法も似ていますが、別物です。Java で記述されたスクリプトが JavaScript ではありませんし、JavaScript の略称が Java でもありません。ルーツは同じであるとしても、英語とドイツ語くらい異なるものです。</p>
</div>
<h5>◆ オブジェクト指向プログラミングが可能</h5>
<div class=i>
<p>Java は、<b>オブジェクト指向</b> 的なプログラミングが可能な言語です。オブジェクト指向とは継承機能を持つクラスに基づいてインスタンスを生成することで記述性を高める・・・と言っても説明しきれないので、どこか別の場所で詳しく説明します。オブジェクト指向プログラミング言語には他に、Smalltalk、C++、C# などがあります。</p>
</div>
<h5>◆ 中間コードへのコンパイル言語</h5>
<div class=i>
<p>プログラミング言語は、プログラムを逐次解析しながら実行する <b>インタープリタ型言語</b> と、あらかじめマシン語コードに変換しておく <b>コンパイル型言語</b> に大別されます。Java は基本的にはコンパイル型言語ですが、CPU に依存したマシンコードではなく、CPU に依存しない <b>中間コード</b> にコンパイルするのが特徴です。</p>
</div>
<h5>◆ 仮想マシン VM</h5>
<div class=i>
<p>CPU に依存したマシンコードは CPU が実行しますが、Java のような CPU に依存しない中間コードは、Java の実行環境に含まれるソフトウェアが読み込み、CPU 依存のマシンコードに変換しながら実行します。このソフトウェアを <b>Java VM</b>（Virtual Machine：仮想マシン）と呼びます。</p>
</div>
<h5>◆ Write Once, Run Anywhere</h5>
<div class=i>
<p>「一度書いたら、どこでも動く」。Java では CPU や OS に依存しないプログラミングが可能で、一度書いたプログラムは、Windows や UNIX系OS や携帯電話など、様々なプラットフォームで動かすことが可能と言われています。ただし、Java VM のバージョンなどに強く左右され、まだまだ思うようには動かないのが現実のようです。</p>
</div>
<h5>◆ メモリリークの可能性が少ない</h5>
<div class=i>
<p>Java は、<b>メモリリーク</b> の無い言語と表現されることもありましたが、これはちょっと嘘です。しかし、メモリリークのミスが少なくなるように設計された言語であることは間違いありません。確保されたメモリは、誰からも参照されなくなると自動的に開放されます。</p>
</div>

<h4 id="History">Javaの歴史（Java, Java 2）</h4>
<div class=i>
<p>Java の大まかな歴史は下記のようになります。Java1.2 からは Java 2 と呼ばれるようになりました。</p>
<div class="tab">Javaの歴史</div>
<pre class=c2>
Java1.0 ... 1996年
　↓
Java1.1 ... 1997年（国際化、JAR、JDBC、RMI、Java Beansなど）
　↓
Java2（Java1.2）... 1998年（Swing、JFC、J2SE/J2EE/J2ME など）
　↓
Java2（Java1.3）... 2000年
　↓
Java2（Java1.4）... 2002年（XML関連、正規表現）
　↓
Java2（Java1.4.2）... 2004年（現在の主流）
　↓
Java2（Java1.5）... 2004年(?)
</pre>
</div>

<h4 id="Edition">Javaのエディション（J2SE, J2EE, J2ME）</h4>
<div class=i>
<p><b>Java 2</b> には複数のエディションがあります。個人向けデスクトップなどで使用されるのが <b>J2SE</b>、企業向けサーバなどで使用されるのが <b>J2EE</b>、組み込み系で使用されるのが <b>J2ME</b> です。</p>
<div class="tab">エディション</div>
<pre class=c2>
J2SE(Java 2 Platform, Standard Edition)
  → 標準エディション

J2EE(Java 2 Platform, Enterprise Edition)
  → 企業向けエディション（Servlet、JSP、EJB ...）

J2ME(Java 2 Platform, Micro Edition)
  → 組み込み向けエディション
</pre>
</div>

<h4 id="JRE_SDK">Javaの配布形態（JRE, SDK）</h4>
<div class=i>
<p>J2SE は、下記の 2つの形態で配布されています。Java のソフトウェアを動かすには <b>JRE</b> が、開発するには <b>SDK</b> が必要です。SDK は Java 1.1 までは <b>JDK</b>（Java Development Kit）と呼ばれていました。</p>
<div class="tab">配布形態</div>
<pre class=c2>
JRE(Java Runtime Environment)
  → Javaの実行環境のみ。

SDK(Software Development Kit)
  → Javaの開発環境。JREを含む。
</pre>
</div>

<hr>
<div>Copyright (C) 2004 杜甫々</div>
<div>http://www.tohoho-web.com/java/about.htm</div>
<div>初版：2004年6月26日、最終更新：2004年6月26日</div>
<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<span class="gray">[前に]</span>
<a href="start.htm" tppabs="http://www.tohoho-web.com/java/start.htm">[次に]</a>
</body>
</html>
