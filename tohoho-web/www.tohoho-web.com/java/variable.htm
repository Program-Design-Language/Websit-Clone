<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのJava入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>
<h2>変数</h2>

<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<a href="method.htm" tppabs="http://www.tohoho-web.com/java/method.htm">[前に]</a>
<a href="string.htm" tppabs="http://www.tohoho-web.com/java/string.htm">[次に]</a>

<h4 id="variable">変数</h4>
<div class=i>
<p>値を保存しておくメモリに名前をつけたものを <b>変数</b>（variable）と呼びます。</p>
<div class="tab">Java</div>
<pre class=c2>
class クラス名 {
    <em>型 変数名</em>;
}
</pre>
<p>例えば、int 型の変数 a を定義するには次のようにします。</p>
<div class="tab">Java</div>
<pre class=c2>
class クラス名 {
    <em>int a;</em>
}
</pre>
</div>

<h4 id="modifier">変数修飾子（public, ...）</h4>
<div class=i>
<p>変数の修飾子には、<a href="modifier.htm#access" tppabs="http://www.tohoho-web.com/java/modifier.htm#access">public</a>、<a href="modifier.htm#access" tppabs="http://www.tohoho-web.com/java/modifier.htm#access">protected</a>、<a href="modifier.htm#access" tppabs="http://www.tohoho-web.com/java/modifier.htm#access">private</a>、<a href="modifier.htm#static" tppabs="http://www.tohoho-web.com/java/modifier.htm#static">static</a>、<a href="modifier.htm#final" tppabs="http://www.tohoho-web.com/java/modifier.htm#final">final</a>、<a href="modifier.htm#transient" tppabs="http://www.tohoho-web.com/java/modifier.htm#transient">transient</a>、<a href="modifier.htm#volatile" tppabs="http://www.tohoho-web.com/java/modifier.htm#volatile">volatile</a> を指定することができます。
<div class="tab">Java</div>
<pre class=c2>
class クラス名 {
    <em>修飾子</em> int testVariable;
        :
}
</pre>
</div>

<h4 id="constant">定数（static final）</h4>
<div class=i>
<p>変数を下記のように定義することにより、変更不可能な <b>定数</b> を表現することが可能となります。定数は通常大文字で記述するのが習慣です。</p>
<div class="tab">Java</div>
<pre class=c2>
class Math {
    public <em>static final</em> double <em>PI</em> = 3.14159265358979323846;
}
</pre>
</div>

<h4 id="this">自分自身（this）</h4>
<div class=i>
<p>クラスメソッドの中で <b>this</b> は自分自身を示す特別な変数名となります。下記の例では、this は、Person クラスのインスタンス自身を示します。</p>
<div class="tab">Java</div>
<pre class=c2>
class Person {
    String name;
    int age;
    Person(String name, int age) {
        <em>this.</em>name = name;
        <em>this.</em>age = age;
    }
}
</pre>
</div>

<h4 id="array">配列</h4>
<div class=i>
<p>次のようにして、3個の要素からなる配列を生成することができます。</p>
<div class="tab">Java</div>
<pre class=c2>
class Test {
    public static void main(String[] args) {
        <em>int[] xx = new int[3];</em>
        xx[0] = 100;
        xx[1] = 200;
        xx[2] = 300;
    }
}
</pre>
<p>次のようにして、生成と初期化を一度に行うこともできます。</p>
<div class="tab">Java</div>
<pre class=c2>
<em>int[] xx = { 100, 200, 300 };</em>
</pre>
<p>配列の個数は <b>length</b> で参照できます。</p>
<div class="tab">Java</div>
<pre class=c2>
int[] xx = new int[3];
int n = xx<em>.length</em>;
</pre>
<p>二次元の配列を生成することも可能です。</p>
<div class="tab">Java</div>
<pre class=c2>
<em>int[][] xx = new int[3][5];</em>
<em>String[][] ss =</em> {
    { "Sun", "Sunday" },
    { "Mon", "Monday" }
};
</pre>
<p>オブジェクトの配列を生成するには、配列生成後、それぞれの要素も個別に生成する必要があります。</p>
<div class="tab">Java</div>
<pre class=c2>
<em>ClassA[] xx = new ClassA[3];</em>
xx[0] = new ClassA();
xx[1] = new ClassA();
xx[2] = new ClassA();
</pre>
</div>

<hr>
<div>http://www.tohoho-web.com/java/variable.htm</div>
<div>初版：2004年6月26日、最終更新：2004年6月26日</div>
<a href="index.htm" tppabs="http://www.tohoho-web.com/java/index.htm">[戻る]</a>
<a href="method.htm" tppabs="http://www.tohoho-web.com/java/method.htm">[前に]</a>
<a href="string.htm" tppabs="http://www.tohoho-web.com/java/string.htm">[次に]</a>
</body>
</html>
