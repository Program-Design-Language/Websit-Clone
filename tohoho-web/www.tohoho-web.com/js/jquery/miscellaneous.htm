<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのjQuery入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
<link rel="stylesheet" href="jquery.css" tppabs="http://www.tohoho-web.com/js/jquery/jquery.css">
</head>
<body>
<h2>jQuery入門</h2>
<a href="../../www.htm" tppabs="http://www.tohoho-web.com/www.htm">トップ</a> &gt;
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/jquery/index.htm">jQuery</a> &gt;
Miscellaneous

<h4>Miscellaneous(Collection Manipulation)</h4>

<h5 id="each">◆ <i>obj</i>.each(<i>function(index, element)</i>) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> の各要素に対して関数を実行します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("div").<em>each(function() {</em>
    alert($(this).html());
<em>});</em>
</pre>
<div class="tab">HTML</div>
<pre class=c2>
&lt;div id="d1"&gt;D1&lt;/div&gt;
&lt;div id="d2"&gt;D2&lt;/div&gt;
&lt;div id="d3"&gt;D3&lt;/div&gt;
&lt;div id="d4"&gt;D4&lt;/div&gt;
&lt;div id="d5"&gt;D5&lt;/div&gt;
</pre>
</div>

<h4>Miscellaneous(DOM Element Methods)</h4>

<h5 id="size">◆ <i>obj</i>.size() <u>(1.0/廃止:1.8)</u></h5>
<div class=i>
<p><i>obj</i> の個数を返します。jQuery 1.8 で非推奨となり、jQuery 3.0 で削除されました。代わりに <a href="internals.htm#length" tppabs="http://www.tohoho-web.com/js/jquery/internals.htm#length">.length</a> を使用してください。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
var num = $("h1").<em>size()</em>;
</pre>
</div>

<h5 id="get">◆ <i>obj</i>.get([<i>index</i>]) <u>(1.0)</u></h5>
<div class=i>
<p>jQuery配列を JavaScript配列に変換します。<i>index</i> を指定すると、0から数えて <i>index</i>番目の要素のみを JavaScript要素に変換します。省略した場合はすべての要素を配列で返します。下記の例では、$("div.data") で取得した jQuery配列を get() で JavaScript配列に変換し、JavaScriptの機能で sort() しています。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
divs = $("div.data").<em>get()</em>.sort();
for (var i = 0; i &lt; divs.length; i++) {
    $("#log").append(divs[i].innerHTML);
}
</pre>
</div>

<h5 id="toArray">◆ <i>obj</i>.toArray() <u>(1.4)</u></h5>
<div class=i>
<p>get() と同様、jQuery配列を JavaScript配列に変換します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
divs = $("div.data").<em>toArray()</em>.sort();
for (var i = 0; i &lt; divs.length; i++) {
    $("#log").append(divs[i].innerHTML);
}
</pre>
</div>

<h5 id="index">◆ <i>obj</i>.index() <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.index(<i>selector</i>) <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.index(<i>element</i>) <u>(1.0)</u></h5>
<div class=i>
<p>index() の形式は、兄弟要素における該当要素のインデックスを返します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("tr").each(function() {
    $("#log").append("n=" + $(this).<em>index()</em> + "&lt;br&gt;");    <span class="comment">// n=0  n=1  n=2...</span>
});
</pre>
<p>index(<i>selector</i>) の形式は、<i>selector</i> で示される要素集合における <i>obj</i> のインデックスを返します。要素集合内に存在しない場合は -1 を返します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("tr").each(function() {
    $("#log").append("n=" + $(this).<em>index("tr.data")</em> + "&lt;br&gt;");
});
</pre>
<p>index(<i>element</i>) の形式は、<i>obj</i> 集合における <i>element</i> のインデックスを返します。集合内に存在しない場合は -1 を返します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("tr").each(function() {
    $("#log").append("n=" + $("tr").<em>index(this)</em> + "&lt;br&gt;");
});
</pre>
</div>

<h4>Miscellaneous(Data)</h4>

<h5 id="data">◆ <i>obj</i>.data(<i>key</i>, <i>value</i>) <u>(1.2.3)</u></h5>
<h5>◆ <i>obj</i>.data(<i>keyValues</i>) <u>(1.4.3)</u></h5>
<h5>◆ <i>obj</i>.data(<i>key</i>) <u>(1.2.3)</u></h5>
<h5>◆ <i>obj</i>.data() <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> に <i>key</i>=<i>value</i> のデータを設定・参照します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#total").<em>data("totalFee", "128000")</em>;
var totalFee = $("#total").<em>data("totalFee")</em>;    <span class="comment">// "128000"</span>
</pre>
<p>下記の様な指定も可能です。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#data").data(<em>{ name: "Mike", age: 36 }</em>);
var name = $("#data").<em>data("name")</em>;              <span class="comment">// "Mike"</span>
</pre>
<p>引数を省略するとすべての値を取得します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#data").data(<em>{ name: "Mike", age: 36 }</em>);
var name = $("#data").<em>data()</em>;                    <span class="comment">// { name: "Mike", age: 36 }</span>
</pre>
</div>

<h5 id="removeData">◆ <i>obj</i>.removeData([<i>name</i>]) <u>(1.2.3)</u></h5>
<h5>◆ <i>obj</i>.removeData(<i>list</i>) <u>(1.7)</u></h5>
<h5 id="removeData2">◆ $.removeData(<i>element</i>[, <i>name</i>]) <u>(1.2.3)</u></h5>
<div class=i>
<p><i>obj</i> や <i>element</i> から data() で設定した値を削除します。引数を省略するとすべてのデータを削除します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#total").data("totalFee", "128000");
$("#total").<em>removeData("totalFee")</em>;

$("#data").data({ name: "Mike", age: 36 });
$("#total").<em>removeData("name", "age")</em>;

$("#total").<em>removeData()</em>;

<em>$.removeData($("#total").get()[0], "name");</em>
</pre>
</div>

<h5 id="hasData">◆ $.hasData(<i>element</i>) <u>(1.5)</u></h5>
<div class=i>
<p>指定した JavaScript要素がデータを持っているか否かを true / false で返します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$(document.body).data("currentFocus", "text1");
$("#log").append("data = " + $(document.body).data("currentFocus") + "\n");
$("#log").append("hasData = " + <em>$.hasData(document.body)</em> + "\n");
</pre>
</div>

<hr>
<div>Copyright (C) 2013-2019 杜甫々</div>
<div>初版：2013年2月3日、最終更新：2019年5月5日</div>
<div>http://www.tohoho-web.com/js/jquery/miscellaneous.htm</div>
</body>
</html>
