<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのjQuery入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
<link rel="stylesheet" href="jquery.css" tppabs="http://www.tohoho-web.com/js/jquery/jquery.css">
</head>
<body>
<h2>jQuery入門</h2>
<a href="../../www.htm" tppabs="http://www.tohoho-web.com/www.htm">トップ</a> &gt;
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/jquery/index.htm">jQuery</a> &gt;
Core

<h4>Core</h4>

<h5 id="jQuery">◆ jQuery(<i>...</i>) <u>(1.0)</u></h5>
<div class=i>
<p>jQuery(<i>...</i>) と $(...) は同義です。</p>
</div>

<h5 id="jQuery2">◆ jQuery.<i>xxx</i> <u>(1.0)</u></h5>
<div class=i>
<p>jQuery.<i>xxx</i> と $.<i>xxx</i> は同義です。</p>
</div>

<h5 id="jQuery-selector">◆ $(<i>selector</i>[, <i>context</i>]) <u>(1.0)</u></h5>
<h5>◆ $(<i>element</i>) <u>(1.0)</u></h5>
<h5>◆ $(<i>elementArray</i>) <u>(1.0)</u></h5>
<h5>◆ $(<i>object</i>) <u>(1.0)</u></h5>
<h5>◆ $(<i>jQuery object</i>) <u>(1.0)</u></h5>
<h5>◆ $() <u>(1.4)</u></h5>
<div class=i>
<p>スタイルシートの <a href="../../css/selector.htm" tppabs="http://www.tohoho-web.com/css/selector.htm">セレクタ</a> を用いて、HTML文書内からセレクタにマッチする要素の集合をjQueryオブジェクトとして返却します。下記の例では、文書内のすべての div要素の色を設定しています。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$("div")</em>.css("color", "red");
</pre>
<p>下記の例では、title というクラスが設定された要素の色を変更します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$(".title")</em>.css("color", "red");
</pre>
<p><i>context</i> には、検索の対象となる要素を記述します。下記の例では、id="main-frame" 要素の子孫要素に含まれる div要素の色を変更しています。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$("div", "#main-frame")</em>.css("color", "red");
</pre>
<p>引数にJavaScriptオブジェクトを渡すこともできます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$(document.forms[0])</em>.css("color", "red");
</pre>
</div>

<h5 id="jQuery-html">◆ $(<i>html</i>[, <i>ownerDocument</i>]) <u>(1.0)</u></h5>
<h5>◆ $(<i>html</i>, <i>attributes</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>html</i> で指定した要素を新規に作成して返却します。下記の例では、広告を表示する要素を生成し、body要素の最後に追加します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$("&lt;div&gt;Copyright (C) 2013 Xxx&lt;/div&gt;")</em>.appendTo("body");
</pre>
<p>下記の様に、第2引数に属性のリストを指定することもできます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;div /&gt;", <em>{ "class": "red", "text": "Copyright (C) 2013 Xxx" }</em>).appendTo("body");
</pre>
</div>

<h5 id="jQuery-callback">◆ $(<i>callback</i>) <u>(1.0)</u></h5>
<div class=i>
<p>$(document).ready(<i>callback</i>) と同義です。文書の読み込みが完了した際にコールバック関数を呼び出します。下記の例では、文書の読み込みが完了した時点で Hello メッセージを表示します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$(function() {</em>
    alert("Hello!");
<em>});</em>
</pre>
</div>

<h5 id="sub">◆ $.sub() <u>(1.5/廃止:1.9)</u></h5>
<div class=i>
<p>オリジナルの jQueryオブジェクトに影響を与えず、プロパティやメソッドを変更可能な jQueryオブジェクトの新しい複製を生成します。jQuery 1.7 で非推奨となり、jQuery 1.9 で廃止されました。</p>
</div>

<h5 id="holdReady">◆ $.holdReady(<i>hold</i>) <u>(1.6)</u></h5>
<div class=i>
<p><i>hold</i> に true を指定すると、readyイベントの発生を抑止します。&lt;head&gt;～&lt;/head&gt; 内など早い時点で true を引数に呼び出すことで readyイベントの発生を抑止し、プラグインの読み込みなどが完了した時点で、false を引数に呼び出すことで、readyイベントの発生を許可します。$.holdReady(true) が呼び出された回数分、$.holdReady(false) を呼び出す必要があります。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
&lt;script&gt;
<em>$.holdReady(true);</em>
$.getScript("myplugin.js, function() {
    <em>$.holdReady(false);</em>
});
&lt;/script&gt;
</pre>
</div>

<h5 id="noConflict">◆ $.noConflict([<i>removeAll</i>]) <u>(1.0)</u></h5>
<div class=i>
<p>$ を使用する他の JavaScript ライブラリとの衝突を避けるために、jQuery で $ を使用せず、代わりに jQuery を使用するようにします。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
&lt;script&gt;
<em>$.noConflict();</em>
jQuery("div#div1").click(function() { ... });
</pre>
<p>ただし、readyハンドラの引数に $ を指定した場合、その中でのみ $ を使用することができます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$.noConflict();</em>
jQuery(document).ready(function(<em>$</em>) {
    <span class="comment">// $ を使った記述が可能</span>
});
    <span class="comment">// $ を使った記述は不可</span>
</pre>
<p><i>removeAll</i> に true を指定すると、jQuery 自体も使用できなくなりますが、あまり指定されることはありません。</p>
</div>

<h5 id="ready">◆ $.ready <u>(1.8)</u></h5>
<div class="i">
<p>ドキュメントが読み込み状態を監視するための Deferred ライクなオブジェクトを示します。下記の例では、ドキュメントが読み込まれた際に実行する関数を指定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$.when(<em>$.ready</em>).then(function() {
  ...
});
</pre>
</div>

<h5 id="readyException">◆ $.readyException(<i>error</i> <u>(3.1)</u></h5>
<div class="i">
<p>ドキュメント読み込み失敗時のコールバック関数を設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$.readyException</em> = function(error) {
  console.log(error);
}
</pre>
</div>

<hr>
<div>Copyright (C) 2013-2019 杜甫々</div>
<div>初版：2013年2月3日、最終更新：2019年5月5日</div>
<div>http://www.tohoho-web.com/js/jquery/core.htm</div>
</body>
</html>
