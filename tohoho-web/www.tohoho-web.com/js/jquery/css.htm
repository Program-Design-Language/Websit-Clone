<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのjQuery入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
<link rel="stylesheet" href="jquery.css" tppabs="http://www.tohoho-web.com/js/jquery/jquery.css">
</head>
<body>
<h2>jQuery入門</h2>
<a href="../../www.htm" tppabs="http://www.tohoho-web.com/www.htm">トップ</a> &gt;
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/jquery/index.htm">jQuery</a> &gt;
CSS

<h4>CSS</h4>

<h5 id="css">◆ <i>obj</i>.css(<i>propertyName</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.css(<i>propertyNames</i>) <u>(1.9)</u></h5>
<h5>◆ <i>obj</i>.css(<i>propertyName</i>, <i>value</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.css(<i>properties</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.css(<i>propertyName</i>, <i>function(index, value)</i>) <u>(1.4)</u></h5>
<div class=i>
<p>.css(<i>propertyName</i>) の形式は <i>obj</i> のスタイルを参照します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
color = $("#d1").<em>css("color")</em>;
</pre>
<p>.css(<i>propertyNames</i>) の形式は <i>obj</i> の複数のスタイルを参照します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
props = $("#d1").<em>css(["width", "height"])</em>;
</pre>
<p>.css(<i>propertyName</i>, <i>value</i>) の形式は <i>obj</i> のスタイルを設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>css("color", "red")</em>;
</pre>
<p>.css(<i>properties</i>) の形式は下記の記法で <i>obj</i> のスタイルを設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>attr({</em>
    color: "red",
    border: "1px solid gray"
<em>});</em>
</pre>
<p>.css(<i>propertyName</i>, <i>function(...)</i>) の形式は関数の戻り値を <i>propertyName</i>スタイルに設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>css("color", function(i, val) {</em>
    return "red";
<em>});</em>
</pre>
</div>

<h5 id="height">◆ <i>obj</i>.height() <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.height(<i>value</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.height(<i>function(index, currentHeight)</i>) <u>(1.4.1)</u></h5>
<h5 id="width">◆ <i>obj</i>.width() <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.width(<i>value</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.width(<i>function(index, currentWidth)</i>) <u>(1.4.1)</u></h5>
<h5 id="innerHeight">◆ <i>obj</i>.innerHeight() <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.innerHeight(<i>value</i>) <u>(1.8)</u></h5>
<h5>◆ <i>obj</i>.innerHeight(<i>function(index, currentHeight)</i>) <u>(1.8)</u></h5>
<h5 id="innerWidth">◆ <i>obj</i>.innerWidth() <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.innerWidth(<i>value</i>) <u>(1.8)</u></h5>
<h5>◆ <i>obj</i>.innerWidth(<i>function(index, currentWidth)</i>) <u>(1.8)</u></h5>
<h5 id="outerHeight">◆ <i>obj</i>.outerHeight([<i>includeMargin</i>]) <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.outerHeight(<i>value</i>) <u>(1.8)</u></h5>
<h5>◆ <i>obj</i>.outerHeight(<i>function(index, currentWidth)</i>) <u>(1.8)</u></h5>
<h5 id="outerWidth">◆ <i>obj</i>.outerWidth([<i>includeMargin</i>]) <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.outerWidth(<i>value</i>) <u>(1.8)</u></h5>
<h5>◆ <i>obj</i>.outerWidth(<i>function(index, currentWidth)</i>) <u>(1.8)</u></h5>
<div class=i>
<p>.height(), .width() はパディングも含まない高さ・横幅、.innerHeight(), .innerWidth() はパディングを含む高さ・横幅、.outerHeight(), outerWidth() はボーダーを含む高さ・横幅、.outerHeight(true), .outerWidth(false) はさらにマージンを含む高さ・横幅を取得します。</p>
<div style="border: 1px dashed #333333; width: 200px; padding: 2px 14px; font-size: 8pt;">
  margin
  <div style="border: 1px solid #333333; padding: 2px 14px; background-color: #333333; color: white;">
    border
    <div style="border: 1px solid #333333; padding: 2px 14px; background-color: white; color: black;">
      padding
      <div style="border: 1px dashed #333333; padding: 2px 14px;">
        element
      </div>
      &nbsp;
    </div>
    &nbsp;
  </div>
  &nbsp;
</div>
<div class="tab">JavaScript</div>
<pre class=c2>
val = $("#d1").<em>height()</em>;             // 100
val = $("#d1").<em>innerHeight()</em>;        // 120
val = $("#d1").<em>outerHeight()</em>;        // 140
val = $("#d1").<em>outerHeight(true)</em>;    // 160
</pre>
<div class="tab">JavaScript</div>
<pre class=c2>
&lt;div id="d1" style="width:100px; height:100px; padding:10px; border: 10px solid gray; margin: 10px;"&gt;&lt;/div&gt;
</pre>
<p>.height(<i>value</i>) や .height(<i>function(...)</i>) の形式は、高さ・横幅を <i>value</i> や <i>function()</i> の戻り値に設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>height(300)</em>;
</pre>
</div>

<h5 id="offset">◆ <i>obj</i>.offset() <u>(1.2)</u></h5>
<h5>◆ <i>obj</i>.offset(<i>coordinates</i>) <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.offset(<i>function(index, coords)</i>) <u>(1.4)</u></h5>
<div class=i>
<p>.offset() の形式は、<i>obj</i> の画面上の縦位置、横位置を取得します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
val = $("#d1").<em>offset()</em>;
alert(val.top + "," + val.left);            <span class="comment">// 100,100</span>
</pre>
<p>.offset(<i>coordinates</i>) の形式は、<i>obj</i> の画面上の縦位置、横位置を設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>offset({ top: 100, left: 100 })</em>;
</pre>
<p>.offset(<i>function(...)</i>) の形式は、<i>obj</i> の画面上の縦位置、横位置を関数の戻り値に設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>offset(function() {</em>
    return { top: 100, left: 100 };
<em>});</em>;
</pre>
</div>

<h5 id="position">◆ <i>obj</i>.position() <u>(1.2)</u></h5>
<div class=i>
<p><i>obj</i> の親要素からの相対位置を取得します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
val = $("#d1").<em>position()</em>;
alert(val.top + "," + val.left);            <span class="comment">// 100,100</span>
</pre>
</div>

<h5 id="scrollTop">◆ <i>obj</i>.scrollTop() <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.scrollTop(<i>value</i>) <u>(1.2.6)</u></h5>
<h5 id="scrollLeft">◆ <i>obj</i>.scrollLeft() <u>(1.2.6)</u></h5>
<h5>◆ <i>obj</i>.scrollLeft(<i>value</i>) <u>(1.2.6)</u></h5>
<div class=i>
<p><i>obj</i> の縦方向、横方向のスクロール位置を取得・設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
val = $("#d1").<em>scrollTop()</em>;      <span class="comment">// 50</span>
$("#d1").<em>scrollTop(100)</em>;
val = $("#d1").<em>scrollLeft()</em>;     <span class="comment">// 50</span>
$("#d1").<em>scrollLeft(100)</em>;
</pre>
</div>

<h5 id="cssHooks">◆ $.cssHooks <u>(1.4.3)</u></h5>
<div class=i>
<p>新しい CSSプロパティを定義します。下記の例では、width と height を一度に設定する widthHeight という新しい CSSプロパティを定義しています。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$.<em>cssHooks["widthHeight"]</em> = {
    <em>get:</em> function(elem, computed, extra) {
        return $(elem).css("width");
    },
    <em>set:</em> function(elem, value) {
        $(elem).css({ width: value, height: value });
    }
};
$("div#d1").css("widthHeight", "300px");
</pre>
</div>

<h5 id="cssNumber">◆ $.cssNumber <u>(1.4.3)</u></h5>
<div class=i>
<p>単位無しで使用可能なCSSプロパティを持つオブジェクトです。<a href="#css">css()</a> はこのオブジェクトを利用して、単位無しの値に 'px' を付与するか否かを決めます。CSSプロパティには、zIndex, fontWeight, opacity, zoom, lineHeight, widows(1.6-), orphans(1.6-), fillOpacity(1.6.2-), columnCount(1.9-), order(1.10.2-), flexGlow(1.11.1), flexShrink(1.11.1-) が含まれます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$<em>.cssHooks.zIndex</em> = false;
</pre>
</div>

<h5 id="escapeSelector">◆ $.escapeSelector(<i>selector</i>) <u>(3.0)</u></h5>
<div class=i>
<p>CSSのセレクタとして意味のある文字を無効化します。例えば、id="test.open" とした場合、$("#test.open") とすると、id="test" class="open" の要素を探してしまい、うまくマッチしません。これを、下記の様にすることでマッチできるようにします。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$('#' + <em>$.escapeSelector('test.open')</em>).css('background-color', 'blue');
</pre>
</div>

<hr>
<div>Copyright (C) 2013-2019 杜甫々</div>
<div>初版：2013年2月3日、最終更新：2019年5月5日</div>
<div>http://www.tohoho-web.com/js/jquery/css.htm</div>
</body>
</html>
