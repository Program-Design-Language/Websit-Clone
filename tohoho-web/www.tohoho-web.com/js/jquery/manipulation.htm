<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>とほほのjQuery入門 - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
<link rel="stylesheet" href="jquery.css" tppabs="http://www.tohoho-web.com/js/jquery/jquery.css">
</head>
<body>
<h2>jQuery入門</h2>
<a href="../../www.htm" tppabs="http://www.tohoho-web.com/www.htm">トップ</a> &gt;
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/jquery/index.htm">jQuery</a> &gt;
Manipulation

<h4>Manipulation(DOM Insertion, Inside)</h4>

<h5 id="prepend">◆ <i>obj</i>.prepend(<i>content</i>[, <i>content</i>]) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.prepend(<i>function(index, html)</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> の先頭に <i>content</i> を挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>prepend("&lt;em&gt;insert&lt;/em&gt;");</em>    <span class="comment">// &lt;p&gt;&lt;em&gt;insert&lt;/em&gt;...&lt;/p&gt;</span>
</pre>
</div>

<h5 id="append">◆ <i>obj</i>.append(<i>content</i>[, <i>content</i>]) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.append(<i>function(index, html)</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> の末尾に <i>content</i> を挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>append("&lt;em&gt;insert&lt;/em&gt;");</em>    <span class="comment">// &lt;p&gt;...&lt;em&gt;insert&lt;/em&gt;&lt;/p&gt;</span>
</pre>
</div>

<h5 id="prependTo">◆ <i>obj</i>.prependTo(<i>target</i>) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> を <i>target</i> の先頭に挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;em&gt;insert&lt;/em&gt;").<em>prependTo("p")</em>;    <span class="comment">// &lt;p&gt;&lt;em&gt;insert&lt;/em&gt;...&lt;/p&gt;</span>
</pre>
</div>

<h5 id="appendTo">◆ <i>obj</i>.appendTo(<i>target</i>) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> を <i>target</i> の末尾に挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;em&gt;insert&lt;/em&gt;").<em>appendTo("p")</em>;    <span class="comment">// &lt;p&gt;...&lt;em&gt;insert&lt;/em&gt;&lt;/p&gt;</span>
</pre>
</div>

<h4>Manipulation(DOM Insertion, Outside)</h4>

<h5 id="before">◆ <i>obj</i>.before(<i>content</i>[, <i>content</i>]) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.before(<i>function(index)</i>) <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.before(<i>function(index, html)</i>) <u>(1.10)</u></h5>
<div class=i>
<p><i>obj</i> の直前に <i>content</i> を挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>before("&lt;em&gt;insert&lt;/em&gt;");</em>    <span class="comment">// &lt;em&gt;insert&lt;/em&gt;&lt;p&gt;...&lt;/p&gt;</span>
</pre>
<p><i>function(...)</i> の形式は、<i>obj</i> の直前に関数の戻り値を挿入します。<i>index</i> には要素のインデックス、<i>html</i> には要素の内部HTMLが渡されます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>before(function() {</em>           <span class="comment">// &lt;em&gt;insert&lt;/em&gt;&lt;p&gt;...&lt;/p&gt;</span>
    return "&lt;em&gt;insert&lt;/em&gt;";
<em>});</em>
</pre>
</div>

<h5 id="after">◆ <i>obj</i>.after(<i>content</i>[, <i>content</i>]) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.after(<i>function(index)</i>) <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.after(<i>function(index, html)</i>) <u>(1.10)</u></h5>
<div class=i>
<p><i>obj</i> の直後に <i>content</i>  や <i>function(...)</i> の戻り値を挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>after("&lt;em&gt;insert&lt;/em&gt;");</em>    <span class="comment">// &lt;p&gt;...&lt;/p&gt;&lt;em&gt;insert&lt;/em&gt;</span>
</pre>
</div>

<h5 id="insertBefore">◆ <i>obj</i>.insertBefore(<i>target</i>) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> を <i>target</i> の直前に挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;em&gt;insert&lt;/em&gt;").<em>insertBefore("p")</em>;    <span class="comment">// &lt;em&gt;insert&lt;/em&gt;&lt;p&gt;...&lt;/p&gt;</span>
</pre>
</div>

<h5 id="insertAfter">◆ <i>obj</i>.insertAfter(<i>target</i>) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> を <i>target</i> の直後に挿入します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;em&gt;insert&lt;/em&gt;").<em>insertAfter("p")</em>;    <span class="comment">// &lt;p&gt;...&lt;/p&gt;&lt;em&gt;insert&lt;/em&gt;</span>
</pre>
</div>

<h4>Manipulation(DOM Insertion, Around)</h4>

<h5 id="wrap">◆ <i>obj</i>.wrap(<i>wrappingElement</i>) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.wrap(<i>function(index)</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> を <i>wrappingElement</i> 要素で囲みます。下記の例では、p要素を &lt;div class='box'&gt;～&lt;/div&gt; で囲みます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>wrap("&lt;div class='box' /&gt;")</em>;
</pre>
<div class="title-tab">実行前</div>
<pre class="c2">
  &lt;p&gt;...&lt;/p&gt;
  &lt;p&gt;...&lt;/p&gt;
</pre>
<div class="title-tab">実行後</div>
<pre class="c2">
<em>&lt;div class='box'&gt;</em>
  &lt;p&gt;...&lt;/p&gt;
<em>&lt;/div&gt;</em>
<em>&lt;div class='box'&gt;</em>
  &lt;p&gt;...&lt;/p&gt;
<em>&lt;/div&gt;</em>
</pre>
<p><i>function(index)</i> を指定した場合は、関数の戻り値を <i>wrappingElement</i> とみなします。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("div.url").<em>wrap(function() {</em>
    return "&lt;a href='" + $(this).text() + "' /&gt;";
<em>});</em>
</pre>
</div>

<h5 id="wrapAll">◆ <i>obj</i>.wrapAll(<i>wrappingElement</i>) <u>(1.2)</u></h5>
<h5>◆ <i>obj</i>.wrapAll(<i>function</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> の要素集合をまとめて <i>wrappingElement</i> で囲みます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>wrapAll("&lt;div class='box' /&gt;")</em>;
</pre>
<div class="title-tab">実行前</div>
<pre class="c2">
  &lt;p&gt;...&lt;/p&gt;
  &lt;p&gt;...&lt;/p&gt;
</pre>
<div class="title-tab">実行後</div>
<pre class="c2">
<em>&lt;div class='box'&gt;</em>
  &lt;p&gt;...&lt;/p&gt;
  &lt;p&gt;...&lt;/p&gt;
<em>&lt;/div&gt;</em>
</pre>
</div>

<h5 id="wrapInner">◆ <i>obj</i>.wrapInner(<i>wrappingElement</i>) <u>(1.2)</u></h5>
<h5>◆ <i>obj</i>.wrapInner(<i>function(index)</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> のコンテンツを <i>wrappingElement</i> で囲みます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>wrapInner("&lt;em /&gt;")</em>;
</pre>
<div class="title-tab">実行前</div>
<pre class="c2">
&lt;p&gt;...&lt;/p&gt;
</pre>
<div class="title-tab">実行後</div>
<pre class="c2">
&lt;p&gt;<em>&lt;em&gt;</em>...<em>&lt;/em&gt;</em>&lt;/p&gt;
</pre>
</div>

<h4>Manipulation(DOM Replacement)</h4>

<h5 id="replaceAll">◆ <i>obj</i>.replaceAll(<i>target</i>) <u>(1.2)</u></h5>
<div class=i>
<p><i>target</i> を <i>obj</i> で置き換えます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("&lt;div&gt;new Content&lt;/div&gt;").<em>replaceAll("div#d1")</em>;
</pre>
</div>

<h5 id="replaceWith">◆ <i>obj</i>.replaceWith(<i>newContent</i>) <u>(1.2)</u></h5>
<h5>◆ <i>obj</i>.replaceWith(<i>function</i>) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i> を <i>newContent</i> で置き換えます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("div#d1").<em>replaceWith("&lt;div&gt;new Content&lt;/div&gt;")</em>;
</pre>
<p>関数を用いることも可能です。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("h1").<em>replaceWith(function() {</em>
    return "&lt;h2&gt;" + $(this).html() + "&lt;/h2&gt;";
<em>});</em>
</pre>
</div>

<h4>Manipulation(DOM Removal)</h4>

<h5 id="remove">◆ <i>obj</i>.remove([<i>selector</i>]) <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i>要素の中から <i>selector</i> にマッチする要素を削除します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("div.current").<em>remove()</em>;
</pre>
</div>

<h5 id="detach">◆ <i>obj</i>.detach([<i>selector</i>]) <u>(1.4)</u></h5>
<div class=i>
<p><i>obj</i>要素の中から <i>selector</i> にマッチする要素を削除します。remove() が完全に削除するのに対して、detach() は jQuery要素として残り、再度挿入することが可能です。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
var obj = $("div.current").<em>detach()</em>;
</pre>
</div>

<h5 id="empty">◆ <i>obj</i>.empty() <u>(1.0)</u></h5>
<div class=i>
<p><i>obj</i> の子孫要素をすべて削除します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("div.curent").<em>empty()</em>;
</pre>
</div>

<h5 id="unwrap">◆ <i>obj</i>.unwrap() <u>(1.4)</u></h5>
<h5>◆ <i>obj</i>.unwrap([<i>selector</i>]) <u>(3.0)</u></h5>
<div class=i>
<p><i>obj</i> の親要素を削除します。&lt;div&gt;&lt;p&gt;...&lt;/p&gt;&lt;/div&gt; とある時下記を実行すると、&lt;p&gt;...&lt;/p&gt; のみになります。<i>selector</i> を指定した場合は、親要素がセレクタにマッチする場合のみ削除します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("p").<em>unwrap()</em>;
</pre>
<div class="title-tab">実行前</div>
<pre class="c2">
<em>&lt;div&gt;</em>
  &lt;p&gt;...&lt;/p&gt;
<em>&lt;/div&gt;</em>
</pre>
<div class="title-tab">実行後</div>
<pre class="c2">
  &lt;p&gt;...&lt;/p&gt;
</pre>
</div>

<h4>Manipulation(Copying)</h4>

<h5 id="clone">◆ <i>obj</i>.clone([<i>withDataAndEvents</i>]) <u>(1.0)</u></h5>
<h5>◆ <i>obj</i>.clone([<i>withDataAndEvents</i>][, <i>deepWithDataAndEvents</i>]) <u>(1.5)</u></h5>
<div class=i>
<p><i>obj</i> を複製します。<i>withDataAndEvents</i> に true を指定すると、データやイベントハンドラも一緒にコピーします。規定値は false です。<i>deepWithDataAndEvents</i> を true にすると、子孫要素のデータやイベントもコピーします。規定値は <i>withDataAndEvents</i> と同じ値になります。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
$("#d1").<em>clone()</em>.insertAfter("#d2");
</pre>
</div>

<h4>Manipulation(Other)</h4>

<h5 id="htmlPrefilter">◆ $.htmlPrefilter <u>(1.12)</u></h5>
<div class=i>
<p><a href="#html">html()</a> 等で設定する HTML に対するフィルタ関数を設定します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
<em>$.htmlPrefilter</em> = function(html) {
  return html.toLowerCase();
}
$("#d1").html('&lt;p&gt;ABC&lt;/p&gt;');         <span class="cm">// &lt;p&gt;abc&lt;/b&gt; が設定される</span>
</pre>
</div>

<hr>
<div>Copyright (C) 2013-2019 杜甫々</div>
<div>初版：2013年2月3日、最終更新：2019年5月5日</div>
<div>http://www.tohoho-web.com/js/jquery/manipulation.htm</div>
</body>
</html>
