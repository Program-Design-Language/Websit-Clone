<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>フォーム（Form） - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>

<h2>フォーム（Form）</h2>
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/index.htm">[up]</a>
<a href="style.htm" tppabs="http://www.tohoho-web.com/js/style.htm">[prev]</a>
<a href="event.htm" tppabs="http://www.tohoho-web.com/js/event.htm">[next]</a>

<h4>一覧</h4>
<div class=i>
<a href="#ElmText">テキスト</a>,
<a href="#ElmText">テキストエリア</a>,
<a href="#ElmText">パスワード</a>,
<a href="#ElmText">ファイル</a>,
<a href="#ElmButton">ボタン</a>,
<a href="#ElmButton">サブミットボタン</a>,
<a href="#ElmButton">リセットボタン</a>,
<a href="#ElmButton">チェックボックス</a>,
<a href="#ElmButton">ラジオボタン</a>,
<a href="#ElmSelect">セレクト</a>,
<a href="#ElmOption">オプション</a>,
<a href="#action">action</a>,
<a href="#blur">blur()</a>,
<a href="#checked">checked</a>,
<a href="#click">click()</a>,
<a href="#defaultChecked">defaultChecked</a>,
<a href="#defaultSelected">defaultSelected</a>,
<a href="#defaultValue">defaultValue</a>,
<a href="#elements">elements</a>,
<a href="#encoding">encoding</a>,
<a href="#focus">focus()</a>,
<a href="#form2">form</a>,
<a href="#forms">forms</a>,
<a href="#handleEvent">handleEvent()</a>,
<a href="#length">length(forms)</a>,
<a href="#length2">length(elements)</a>,
<a href="#optionsLength">length(options)</a>,
<a href="#selectLength">length(select)</a>,
<a href="#method">method</a>,
<a href="#name">name(form)</a>,
<a href="#name2">name(element)</a>,
<a href="#options">options</a>,
<a href="#reset">reset()</a>,
<a href="#select">select()</a>,
<a href="#selected">selected</a>,
<a href="#selectedIndex">selectedIndex</a>,
<a href="#submit">submit()</a>,
<a href="#target">target</a>,
<a href="#text">text</a>,
<a href="#type">type</a>,
<a href="#value">value(element)</a>,
<a href="#value2">value(option)</a>
</div>

<h4 id="Form">フォームを操作する</h4>
<div class=i>
<p>JavaScript とフォームをくみ合わせることによって、いろいろなことができます。下記の例では、2つの入力フォームに入力した値の合計を表示します。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  var xx = parseFloat(document.F1.T1.value);
  var yy = parseFloat(document.F1.T2.value);
  document.F1.T3.value = xx + yy;
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;input type="text" name="T1"&gt;
＋
&lt;input type="text" name="T2"&gt;
&lt;input type="button" value="＝" onclick="func()"&gt;
&lt;input type="text" name="T3"&gt;
&lt;/form&gt;
</pre>
<p>OK ボタンを押したとき（onclick）に、func() という名前の関数が呼び出されます。func() では、ドキュメント（document）の中の F1 という名前のフォーム（form）の中の、T1 という名前の部品の値（value）を数値に変換（parseFloat()）し、変数 xx に代入しています。同様に yy に T2 欄の値を入れて、その合計を T3 の欄に表示しています。</p>
<p>フォームの値は文字列なので、これを数値として扱う場合は、parseFloat() などの数値変換を用いてください。例えば次の例で、入力欄に 100 を代入して OK を押すと、100 + 100 で 200 になりそうですが実際には "100" + 100 が文字列演算と見なされて、結果は "100100" になってしまいます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  alert(document.F1.T1.value + 100);
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;input type="text" name="T1" value="100"&gt;
&lt;input type="button" value="OK" onclick="func()"&gt;
&lt;/form&gt;
</pre>
</div>

<h4 id="ObjForm">フォームオブジェクト</h4>

<h5 id="forms">◆ <i>window</i>.document.forms</h5>
<h5 id="length">◆ <i>window</i>.document.forms.length</h5>
<div class=i>
<p>forms は &lt;form&gt;～&lt;/form&gt; に対応するフォームオブジェクトの配列を、length はその個数を示します。</p>
</div>

<h5 id="forms2">◆ <i>window</i>.document.<i>form</i></h5>
<div class=i>
<p>個々のフォームオブジェクトを示します。0 から始まる通し番号の他、&lt;form&gt; タグの name 属性で指定したフォーム名（例では "FORM1"）を用いて直接参照することもできます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
f = document.forms[0];
f = document.forms["FORM1"];
f = document.FORM1;
</pre>
</div>

<h5 id="action">◆ <i>window</i>.document.<i>form</i>.action</h5>
<h5 id="encoding">◆ <i>window</i>.document.<i>form</i>.encoding</h5>
<h5 id="method">◆ <i>window</i>.document.<i>form</i>.method</h5>
<h5 id="name">◆ <i>window</i>.document.<i>form</i>.name</h5>
<h5 id="target">◆ <i>window</i>.document.<i>form</i>.target</h5>
<div class=i>
<p>それぞれ、&lt;form&gt; タグで指定した action、encoding、method、name、target 属性の値を示します。</p>
</div>

<h5 id="submit">◆ <i>window</i>.document.<i>form</i>.submit()</h5>
<h5 id="reset">◆ <i>window</i>.document.<i>form</i>.reset()</h5>
<div class=i>
<p>それぞれ、フォームのサブミットボタン、リセットボタンを押したのと同じ効果を起こします。</p>
</div>

<h5 id="handleEvent">◆ <i>window</i>.document.<i>form</i>.handleEvent(<i>event</i>)</h5>
<div class=i>
<p>フォームのイベントハンドラを呼び出します。</p>
</div>

<h4 id="ObjElement">フォーム部品</h4>

<h5 id="elements">◆ <i>window</i>.document.<i>form</i>.elements</h5>
<h5 id="length2">◆ <i>window</i>.document.<i>form</i>.elements.length</h5>
<div class=i>
<p>elements はフォームを構成する各々の部品（エレメント）オブジェクトの配列、length はその個数を示します。</p>
</div>

<h5 id="element">◆ <i>window</i>.document.<i>form</i>.<i>element</i></h5>
<div class=i>
<p>フォームを構成する個々のエレメントオブジェクトを指定します。0 から始まる通し番号や、&lt;input&gt; タグなどの name 属性で指定したエレメント名（例では "ELEM1"）を用いて参照します。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
e = document.FORM1.elements[0];
e = document.FORM1.ELEM1;
</pre>
<p>それぞれの部品は、共通プロパティや共通メソッドの他、そのタイプによって異なるプロパティやメソッドをサポートします。</p>
</div>

<h4 id="ElmCommon">フォーム部品（共通）</h4>

<h5 id="name2">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.name</h5>
<div class=i>
<p>name 属性で指定した、このフォーム部品の名前を示します。</p>
</div>

<h5 id="type">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.type</h5>
<div class=i>
<p>"text" や "submit" などの、このフォーム部品のタイプを示します。</p>
</div>

<h5 id="form2">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.form</h5>
<div class=i>
<p>このフォーム部品を包含するフォームオブジェクトを示します。</p>
</div>

<h5 id="value">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.value</h5>
<div class=i>
<p>このフォーム部品の値。text, password, textarea の場合は入力された文字列、button, submit, reset の場合はボタンに表示される文字列となります。textarea の場合、改行コードは通常、文字コード 0x0d 0x0a で表されますが、Netscape 6.1 は 0x0a のみになるようです。</p>
</div>

<h5 id="focus">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.focus()</h5>
<h5 id="blur">◆ <i>window</i>.document.<i>form</i>.<i>element</i>.blur()</h5>
<div class=i>
<p>focus() はこのエレメントにフォーカスを移し、blur() はこのエレメントからフォーカスをはずします。</p>
</div>

<h4 id="ElmText">フォーム部品（テキスト部品）</h4>
<div class=i>
<p><b id="FormText">テキスト部品</b>（&lt;input type="text"&gt;）、<b id="FormPassword">パスワード部品</b>（&lt;input type="password"&gt;）、<b id="FormFile">ファイル部品</b>（&lt;input type="file"&gt;）、<b id="FormTextarea">テキストエリア部品</b>（&lt;textarea&gt;）は、共通プロパティや共通メソッドの他に下記のプロパティやメソッドをサポートしています。</p>
</div>

<h5 id="defaultValue">◆ <i>window</i>.document.<i>form</i>.<i>text</i>.defaultValue</h5>
<div class=i>
<p>初期値として表示する文字列を示します。ただし、セキュリティのため、ファイル部品に対しては設定することができません。</p>
</div>

<h5 id="select">◆ <i>window</i>.document.<i>form</i>.<i>text</i>.select()</h5>
<div class=i>
<p>入力フィールド内の文字列を選択状態にします。下記のようにすることで、その入力フィールドにフォーカスが移った際に、入力済みの文字列をすべて選択状態にすることができます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;input type="text" onfocus="this.select()"&gt;
</pre>
</div>

<h4 id="ElmButton">フォーム部品（ボタン部品）</h4>
<div class=i>
<p><b id="FormCheckbox">チェックボックス部品</b>（&lt;input type="checkbox"&gt;）、
<b id="FormRadio">ラジオボタン部品</b>（&lt;input type="radio"&gt;）、
<b id="FormButton">ボタン部品</b>（&lt;input type="button"&gt;）、<b id="FormSubmit">サブミット部品</b>（&lt;input type="submit"&gt;）、
<b id="FormReset">リセット部品</b>（&lt;input type="reset"&gt;）は、共通プロパティや共通メソッドの他に下記のプロパティやメソッドをサポートしています。</p>
</div>

<h5 id="defaultChecked">◆ <i>window</i>.document.<i>form</i>.<i>checkbox</i>.defaultChecked</h5>
<h5 id="checked">◆ <i>window</i>.document.<i>form</i>.<i>checkbox</i>.checked</h5>
<div class=i>
<p>チェックボックスとラジオボタンにのみ有効です。defaultChecked は初期値としてチェックされていたかどうか、checked は現在チェックされているかどうかを示す真偽値を返します。checked に true や false を代入することもできます。</p>
<p>チェックボックスがチェックされているかどうかを調べるには次のようにします。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  if (document.F1.C1.checked) {
    alert(document.F1.C1.value);
  }
  if (document.F1.C2.checked) {
    alert(document.F1.C2.value);
  }
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;input type="checkbox" name="C1" value="AAA"&gt;AAA
&lt;input type="checkbox" name="C2" value="BBB"&gt;BBB
&lt;input type="button" value="OK" onclick="func()"&gt;
&lt;/form&gt;
</pre>
<p>ラジオボタンがチェックされているかどうかを調べるには次のようにします。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  var i;
  if (document.F1.R1.length) {
    for (i = 0; i &lt; document.F1.R1.length; i++) {
      if (document.F1.R1[i].checked) {
        alert(document.F1.R1[i].value);
      }
    }
  } else {
    if (document.F1.R1.checked) {
      alert(document.F1.R1.value);
    }
  }
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;input type="radio" name="R1" value="AAA" checked&gt;AAA
&lt;input type="radio" name="R1" value="BBB"&gt;BBB
&lt;input type="radio" name="R1" value="CCC"&gt;CCC
&lt;input type="button" value="OK" onclick="func()"&gt;
&lt;/form&gt;
</pre>
</div>

<h5 id="click">◆ <i>window</i>.document.<i>form</i>.<i>checkbox</i>.click()</h5>
<div class=i>
<p>このボタンををクリックした状態にします。</p>
</div>

<h4 id="ElmSelect">フォーム部品（セレクト部品）</h4>
<div class=i>
<p><b id="FormSelect">セレクト部品</b>（&lt;select&gt;）は、共通プロパティや共通メソッドの他に下記のプロパティをサポートしています。</p>
</div>

<h5 id="selectLength">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.length</h5>
<div class=i>
<p>オプション部品の個数、下記の options.length と同じ意味を持ちます。</p>
</div>

<h5 id="selectedIndex">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.selectedIndex</h5>
<div class=i>
<p>現在選択されているオプションオブジェクトを示すインデックス番号（0～）を示します。これに値を代入することにより、セレクションボックスの選択項目を変更することができます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  var n = document.F1.S1.selectedIndex;
  alert(document.F1.S1.options[n].text);
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;select name="S1"&gt;
&lt;option&gt;AAAA
&lt;option&gt;BBBB
&lt;option&gt;CCCC
&lt;/select&gt;
&lt;input type="button" value="OK" onclick="func()"&gt;
&lt;/form&gt;
</pre>
</div>

<h4 id="ElmOption">フォーム部品（オプション部品）</h4>
<div class=i>
<p><b id="FormOption">オプション部品</b>（&lt;option&gt;）は、共通プロパティや共通メソッドの他に下記のプロパティをサポートしています。</p>
</div>

<h5 id="options">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.options</h5>
<h5 id="options2">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.options[<i>n</i>]</h5>
<h5 id="optionsLength">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.options.length</h5>
<div class=i>
<p>options は&lt;option&gt;に対応するオプションオブジェクトの配列、options[<i>n</i>] は個々のオブジェクト、length は配列の個数を示します。</p>
</div>

<h5 id="defaultSelected">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.<i>option</i>.defaultSelected</h5>
<h5 id="selected">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.<i>option</i>.selected</h5>
<div class=i>
<p>defaultSelected は初期値として選択されていたかどうかを示す真偽値、selected は現在選択されているかどうかを示す真偽値を返します。</p>
</div>

<h5 id="text">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.<i>option</i>.text</h5>
<div class=i>
<p>オプションとして表示されている文字列を返します。</p>
</div>

<h5 id="value2">◆ <i>window</i>.document.<i>form</i>.<i>select</i>.<i>option</i>.value</h5>
<div class=i>
<p>&lt;option&gt; タグの value 属性の値を返します。</p>
</div>

<hr>
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/index.htm">[up]</a>
<a href="style.htm" tppabs="http://www.tohoho-web.com/js/style.htm">[prev]</a>
<a href="event.htm" tppabs="http://www.tohoho-web.com/js/event.htm">[next]</a>
<div>Copyright (C) 1996-2001 杜甫々</div>
<div>改訂版初版：2001年5月20日、最終更新：2001年8月25日</div>
<div>http://www.tohoho-web.com/js/form.htm</div>
</html>

