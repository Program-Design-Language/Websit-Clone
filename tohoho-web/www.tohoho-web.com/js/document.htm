<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>ドキュメント（Document） - とほほのWWW入門</title>
<meta name="viewport" content="width=device-width,initial-scale=1.0">
<link rel="stylesheet" href="../style3.css" tppabs="http://www.tohoho-web.com/style3.css">
</head>
<body>

<h2>ドキュメント（Document）</h2>
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/index.htm">[up]</a>
<a href="location.htm" tppabs="http://www.tohoho-web.com/js/location.htm">[prev]</a>
<a href="element.htm" tppabs="http://www.tohoho-web.com/js/element.htm">[next]</a>

<h4>一覧</h4>
<div class=i>
<a href="#activeElement">activeElement</a>,
<a href="#alinkColor">alinkColor</a>,
<a href="#all">all</a>,
<a href="#bgColor">bgColor</a>,
<a href="#charset">charset</a>,
<a href="#clear">clear()</a>,
<a href="#selectionClear">clear(selection)</a>,
<a href="#close">close()</a>,
<a href="#cookie">cookie</a>,
<a href="#createElement">createElement()</a>,
<a href="#createRange">createRange()</a>,
<a href="#createStyleSheet">createStyleSheet()</a>,
<a href="#defaultCharset">defaultCharset</a>,
<a href="#document">document</a>,
<a href="#domain">domain</a>,
<a href="#elementFromPoint">elementFromPoint()</a>,
<a href="#embeds">embeds</a>,
<a href="#empty">empty()</a>,
<a href="#expando">expando</a>,
<a href="#fgColor">fgColor</a>,
<a href="#getSelection">getSelection()</a>,
<a href="#handleEvent">handleEvent()</a>,
<a href="#lastModified">lastModified</a>,
<a href="#linkColor">linkColor</a>,
<a href="#open">open()</a>,
<a href="#parentWindow">parentWindow</a>,
<a href="#readyState">readyState</a>,
<a href="#referrer">referrer</a>,
<a href="#releaseEvents">releaseEvents()</a>,
<a href="#routeEvent">routeEvent()</a>,
<a href="#selection">selection</a>,
<a href="#showHelp">showHelp()</a>,
<a href="#title">title</a>,
<a href="#selectionType">type</a>,
<a href="#URL">URL</a>,
<a href="#vlinkColor">vlinkColor</a>,
<a href="#write">write()</a>,
<a href="#writeln">writeln()</a>
</div>

<h4 id="objDocument">ドキュメントオブジェクト</h4>

<h5 id="document">◆ <i>window</i>.document</h5>
<div class=i>
<p>表示している文書自体を示すドキュメントオブジェクトです。</p>
</div>

<h4 id="colorBack">色・背景色</h4>

<h5 id="bgColor">◆ <i>document</i>.bgColor</h5>
<h5 id="fgColor">◆ <i>document</i>.fgColor</h5>
<h5 id="linkColor">◆ <i>document</i>.linkColor</h5>
<h5 id="alinkColor">◆ <i>document</i>.alinkColor</h5>
<h5 id="vlinkColor">◆ <i>document</i>.vlinkColor</h5>
<div class=i>
<p>&lt;body&gt; タグで指定する背景色（bgcolor）、テキストの色（text）、リンクテキストの色（link）、クリック中のリンクの色（alink）、参照済みのリンクの色（vlink）に対応する色を示す文字列です。値を代入することで、ダイナミックに色を変更することも可能です。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;form action="#"&gt;
&lt;input type="button" value="red" onclick="document.bgColor='red'"&gt;
&lt;/form&gt;
</pre>
</div>

<h4 id="writeDoc">ドキュメントに書きこむ</h4>

<h5 id="open">◆ <i>document</i>.open([<i>mimeType</i> [, <i>replace</i>]])</h5>
<div class=i>
<p>ドキュメントを開いて書込み可能にします。<a href="window.htm#open" tppabs="http://www.tohoho-web.com/js/window.htm#open">window.open()</a> とは別物です。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
top.main.document.open();
top.main.document.write("&lt;html&gt;\n");
top.main.document.write("&lt;head&gt;&lt;title&gt;テスト&lt;/title&gt;&lt;/head&gt;\n");
top.main.document.write("&lt;body&gt;へへへ&lt;/body&gt;\n");
top.main.document.write("&lt;/html&gt;\n");
top.main.document.close();
</pre>
</div>

<h5 id="write">◆ <i>document</i>.write(<i>msg</i> [, <i>msg</i>...])</h5>
<h5 id="writeln">◆ <i>document</i>.writeln(<i>msg</i> [, <i>msg</i>...])</h5>
<div class=i>
<p>指定したドキュメントに文字列や値を書込みます。書き込みの最後は document.close() でクローズしないと、最後の行が表示されないことがあります。writeln() は write() とほぼ同様ですが、最後に改行コードが送り出される点が異なります。通常の HTML では改行は一文字のスペースになりますが、&lt;pre&gt;～&lt;/pre&gt; などの間で用いると違いが分かります。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
document.writeln("&lt;pre&gt;");
document.writeln("AAA");
document.writeln("BBB");
document.writeln("&lt;/pre&gt;");
</pre>
</div>

<h5 id="close">◆ <i>document</i>.close()</h5>
<div class=i>
<p>ドキュメントへの書き込みを閉じます。これを怠ると、write() や writeln() で書き出した内容がブラウザに表示されないことがあります。</p>
</div>

<h5 id="clear">◆ <i>document</i>.clear()</h5>
<div class=i>
<p>ドキュメントの内容をすべてクリアします。</p>
</div>

<h4 id="Info">ドキュメント情報</h4>

<h5 id="lastModified">◆ <i>document</i>.lastModified</h5>
<div class=i>
<p>このドキュメントが最後に更新された時刻を示す文字列を返します。ブラウザやバージョンによって返される文字列のフォーマットはばらばらで、いろいろな問題があるため、使用するには注意が必要です。</p>
<p>Netscape Navigator 2.0 では「Sun Dec 31 23:59:59 2000」のような形式となり、これを Date() で解釈しようとするとアプリケーションエラーが発生することがあります。Netscape Navigator 3.0/4.0 では「12/31/00 23:59:59」のような形式となり、これを Date() で解釈しようとすると、00 を 1900 年と間違えてしまう問題があります。</p>
<p>IE3.0 では「日 12 31 23:59:59 2000」のような形式となり、これを Date() で解釈することはできません。IE4.0/IE5.0 では「12/31/2000 23:59:59」のような形式となりますが、IE4.0 では時間帯のバグがあり、タイムゾーン（TZ）の設定に関わらず常に UTC の値（9時間ずれた値）が返されます。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
document.write("最終更新時刻： " + document.lastModified);
</pre>
</div>

<h5 id="referrer">◆ <i>document</i>.referrer</h5>
<div class=i>
<p>このページがどのページからジャンプしてきたか、ジャンプ元のページを示すアドレス（URL）を返します。セキュリティを考慮して参照できない場合もあります。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
if (document.referrer) {
  document.write("あなたは");
  document.write(document.referrer);
  document.write("からやってきましたね。");
}
</pre>
</div>

<h5 id="URL">◆ <i>document</i>.URL</h5>
<h5 id="domain">◆ <i>document</i>.domain</h5>
<div class=i>
<p>ドキュメントのアドレス（URL）と、そのドメイン名部分を返します。</p>
</div>

<h5 id="title">◆ <i>document</i>.title</h5>
<div class=i>
<p>&lt;title&gt; で指定されたドキュメントのタイトルを示す文字列を返します。</p>
</div>

<h5 id="charset">◆ <i>document</i>.charset</h5>
<h5 id="defaultCharset">◆ <i>document</i>.defaultCharset</h5>
<div class=i>
<p>このドキュメントのキャラクタセットを示す文字列を返します。シフトJIS の場合は "shift_jis"、EUC の場合は "euc-jp" となります。</p>
</div>

<h5 id="readyState">◆ <i>document</i>.readyState</h5>
<div class=i>
<p>ページのダウンロード状態を "uninitialized", "loading", "interactive", "complete" のいずれかの文字列で返します。</p>
</div>

<h4 id="Element">ドキュメントの要素</h4>

<h5 id="all">◆ <i>document</i>.all</h5>
<div class=i>
<p>このドキュメント中のすべてのエレメント（要素）を参照します。→ <a href="element.htm" tppabs="http://www.tohoho-web.com/js/element.htm">エレメント</a>。</p>
</div>

<h5 id="activeElement">◆ <i>document</i>.activeElement</h5>
<div class=i>
<p>現在フォーカスが当たっているエレメントを返します。</p>
</div>

<h5 id="elementFromPoint">◆ <i>document</i>.elementFromPoint(<i>x</i>, <i>y</i>)</h5>
<div class=i>
<p><i>x</i>, <i>y</i> 座標にあるエレメントを返します。</p>
</div>

<h5 id="createElement">◆ <i>document</i>.createElement(<i>tag</i>)</h5>
<div class=i>
<p>エレメントオブジェクトを新規に作成します。IE4.0 では OPTION と IMAGE のみ作成可能でしたが、IE5.0 ではすべての要素を作成可能になりました。作成したオブジェクトは、add() や appendChild() などで画面に反映させます。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;script&gt;
function func() {
  elm = document.createElement("OPTION");
  elm.text = "CCC";
  document.F1.S1.add(elm);
}
&lt;/script&gt;
&lt;form name="F1" action="#"&gt;
&lt;select name="S1" size=5&gt;
&lt;option&gt;AAA
&lt;option&gt;BBB
&lt;/select&gt;
&lt;input type="button" onclick="func()" value="Add"&gt;
&lt;/form&gt;
</pre>
</div>

<h4 id="Other">その他</h4>

<h5 id="cookie">◆ <i>document</i>.cookie</h5>
<div class=i>
<p>「<a href="../wwwcook.htm" tppabs="http://www.tohoho-web.com/wwwcook.htm">とほほのCookie入門</a>」を参照。</p>
</div>

<h5 id="parentWindow">◆ <i>document</i>.parentWindow</h5>
<div class=i>
<p>親のウィンドウオブジェクト。</p>
</div>

<h5 id="expando">◆ <i>document</i>.expando</h5>
<div class=i>
<p>オブジェクトの属性を拡張することが禁止されているかどうかを示す真偽値。初期値は true。例えば、属性の大文字と小文字を間違えて document.bgcolor = "red"; とした場合、自動的に bgcolor という新しい属性が追加されるが、document.expando = false; としておくことで、これを禁止することができるようになる。</p>
</div>

<h5 id="embeds">◆ <i>document</i>.embeds</h5>
<div class=i>
<p>&lt;embed&gt;に対応する埋め込みオブジェクトの配列。</p>
</div>

<h5 id="getSelection">◆ <i>document</i>.getSelection()</h5>
<div class=i>
<p>現在選択されている文字列を得る。</p>
</div>

<h5 id="selection">◆ <i>document</i>.selection</h5>
<h5 id="selectionType">◆ <i>document</i>.selection.type</h5>
<h5 id="selectionClear">◆ <i>document</i>.selection.clear()</h5>
<h5 id="empty">◆ <i>document</i>.selection.empty()</h5>
<h5 id="createRange">◆ <i>document</i>.selection.createRange()</h5>
<div class=i>
<p>現在選択されている文字列を示すオブジェクト。</p>
<div class="tab">JavaScript</div>
<pre class=c2>
xx = document.selection.createRange();
alert(xx.text);
</pre>
</div>

<h5 id="createStyleSheet">◆ <i>document</i>.createStyleSheet([<i>URL</i> [, <i>index</i>]])</h5>
<div class=i>
<p>このドキュメントに、別ファイルで記述したスタイルシートを適用する。<i>URL</i> には外部スタイルシートファイルのアドレス（URL）を、<i>index</i> には、styleSheets オブジェクトリスト上のインデックスを指定する。</p>
<div class="tab">HTML</div>
<pre class=c2>
&lt;input type="button" value="夏のテーマ"
 onclick="document.createStyleSheet('summer.css')"&gt;
</pre>
</div>

<h5 id="showHelp">◆ <i>document</i>.showHelp(<i>URL</i> [, <i>content</i>])</h5>
<div class=i>
<p>ヘルプを表示する。Microsoft HTML Help でのみ使用可能。</p>
</div>

<h5 id="handleEvent">◆ <i>document</i>.handleEvent(<i>event</i>)</h5>
<h5 id="releaseEvents">◆ <i>document</i>.releaseEvents(<i>events</i>)</h5>
<h5 id="routeEvent">◆ <i>document</i>.routeEvent()</h5>
<div class=i>
<p>イベントに関する処理を行います。</p>
</div>


<!--
execCommand
queryCommandEnabled
queryCommandIndeterm
queryCommandState
queryCommandSupported
queryCommandText
queryCommandValue
handleEvent
-->

<hr>
<a href="index.htm" tppabs="http://www.tohoho-web.com/js/index.htm">[up]</a>
<a href="location.htm" tppabs="http://www.tohoho-web.com/js/location.htm">[prev]</a>
<a href="element.htm" tppabs="http://www.tohoho-web.com/js/element.htm">[next]</a>
<div>Copyright (C) 1996-2001 杜甫々</div><div>改訂版初版：2001年5月20日</div>
<div>http://www.tohoho-web.com/js/document.htm</div>
</body>
</html>
